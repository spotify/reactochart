{"version":3,"sources":["src/YAxis.js"],"names":["YAxis","nextProps","nextState","props","width","height","position","tickLength","titleDistance","labelDistance","showTitle","showLabels","showTicks","showGrid","spacingTop","spacingBottom","spacingLeft","spacingRight","ticksProps","gridProps","labelsProps","titleProps","distance","labelsMargin","getMargin","upperFirst","axisLineX","yScale","defaults","defaultProps","yTickDomain","margins","push","title","Component","propTypes","func","number","string","placement","nice","bool","ticks","array","tickCount","titleAlign","titleRotate","titleStyle","object","labelClassName","labelStyle","labelFormat","oneOfType","labelFormats","labels","tickClassName","tickStyle","gridLineClassName","gridLineStyle","onMouseEnterLabel","onMouseMoveLabel","onMouseLeaveLabel"],"mappings":"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","file":"YAxis.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nimport { getTickDomain } from \"./utils/Scale\";\nimport { sumMargins } from \"./utils/Margin\";\nimport { getAxisChildProps } from \"./utils/Axis\";\nimport xyPropsEqual from \"./utils/xyPropsEqual\";\n\nimport YTicks from \"./YTicks\";\nimport YGrid from \"./YGrid\";\nimport YAxisLabels from \"./YAxisLabels\";\nimport YAxisTitle from \"./YAxisTitle\";\n\nexport default class YAxis extends React.Component {\n  static propTypes = {\n    yScale: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    position: PropTypes.string,\n    placement: PropTypes.string,\n    nice: PropTypes.bool,\n    ticks: PropTypes.array,\n    tickCount: PropTypes.number,\n    spacingTop: PropTypes.number,\n    spacingBottom: PropTypes.number,\n    spacingLeft: PropTypes.number,\n    spacingRight: PropTypes.number,\n\n    showTitle: PropTypes.bool,\n    showLabels: PropTypes.bool,\n    showTicks: PropTypes.bool,\n    showGrid: PropTypes.bool,\n\n    title: PropTypes.string,\n    titleDistance: PropTypes.number,\n    titleAlign: PropTypes.string,\n    titleRotate: PropTypes.bool,\n    titleStyle: PropTypes.object,\n\n    labelDistance: PropTypes.number,\n    labelClassName: PropTypes.string,\n    labelStyle: PropTypes.object,\n    labelFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    labelFormats: PropTypes.array,\n    labels: PropTypes.array,\n\n    tickLength: PropTypes.number,\n    tickClassName: PropTypes.string,\n    tickStyle: PropTypes.object,\n\n    gridLineClassName: PropTypes.string,\n    gridLineStyle: PropTypes.object,\n\n    onMouseEnterLabel: PropTypes.func,\n    onMouseMoveLabel: PropTypes.func,\n    onMouseLeaveLabel: PropTypes.func\n  };\n\n  static defaultProps = {\n    width: 400,\n    height: 250,\n    position: \"left\",\n    nice: true,\n    showTitle: true,\n    showLabels: true,\n    showTicks: true,\n    showGrid: true,\n    tickLength: 5,\n    labelDistance: 3,\n    titleDistance: 5,\n    spacingTop: 0,\n    spacingBottom: 0,\n    spacingLeft: 0,\n    spacingRight: 0\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !xyPropsEqual(this.props, nextProps);\n  }\n\n  static getTickDomain(props) {\n    if (!props.yScale) return;\n    props = _.defaults({}, props, YAxis.defaultProps);\n    return { yTickDomain: getTickDomain(props.yScale, props) };\n  }\n\n  static getMargin(props) {\n    // todo figure out margin if labels change after margin?\n    const { ticksProps, labelsProps, titleProps } = getAxisChildProps(props);\n    let margins = [];\n\n    if (props.showTicks) margins.push(YTicks.getMargin(ticksProps));\n\n    if (props.showTitle && props.title)\n      margins.push(YAxisTitle.getMargin(titleProps));\n\n    if (props.showLabels) margins.push(YAxisLabels.getMargin(labelsProps));\n\n    return sumMargins(margins, \"margin\");\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      position,\n      tickLength,\n      titleDistance,\n      labelDistance,\n      showTitle,\n      showLabels,\n      showTicks,\n      showGrid,\n      spacingTop,\n      spacingBottom,\n      spacingLeft,\n      spacingRight\n    } = this.props;\n\n    const {\n      ticksProps,\n      gridProps,\n      labelsProps,\n      titleProps\n    } = getAxisChildProps(this.props);\n\n    labelsProps.distance = labelDistance + (showTicks ? tickLength : 0);\n\n    if (showTitle && showLabels) {\n      // todo optimize so we don't generate labels twice\n      const labelsMargin = YAxisLabels.getMargin(labelsProps);\n      titleProps.distance =\n        titleDistance + labelsMargin[`margin${_.upperFirst(position)}`];\n    } else if (showTitle && showTicks) {\n      titleProps.distance = titleDistance + tickLength;\n    }\n\n    const axisLineX = position === \"left\" ? -spacingLeft : width + spacingRight;\n\n    return (\n      <g className=\"chart-axis chart-axis-y\">\n        {showGrid ? <YGrid {...gridProps} /> : null}\n\n        {showTicks ? <YTicks {...ticksProps} /> : null}\n\n        {showLabels ? <YAxisLabels {...labelsProps} /> : null}\n\n        {showTitle ? <YAxisTitle {...titleProps} /> : null}\n\n        <line\n          className=\"chart-axis-line chart-axis-line-y\"\n          x1={axisLineX}\n          x2={axisLineX}\n          y1={-spacingTop}\n          y2={height + spacingBottom}\n        />\n      </g>\n    );\n  }\n}\n"]}