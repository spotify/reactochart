{"version":3,"sources":["src/PieChart.js"],"names":["DEFAULT_SIZE","PieChart","React","Component","e","d","props","onMouseEnterSlice","onMouseMoveSlice","onMouseLeaveSlice","onMouseEnterLine","onMouseMoveLine","onMouseLeaveLine","render","marginLeft","marginRight","marginTop","marginBottom","holeRadius","width","radius","height","Math","min","center","x","y","markerLineValue","pieSliceClassName","markerLineOverhangInner","markerLineOverhangOuter","valueAccessor","getValue","sum","_","sumBy","data","total","markerLinePercent","isFinite","startPercent","slices","map","i","slicePercent","slice","start","end","onMouseEnter","onMouseMove","onMouseLeave","eventName","callback","isFunction","partial","className","pathStr","pieSlicePath","key","renderMarkerLine","markerLine","centerLabel","renderCenterLabel","getPieSliceLabel","renderSliceLabel","pathData","markerLineClassName","markerLineStyle","lineD","value","index","pieSliceLabelStyle","pieSliceLabelDistance","labelPercent","style","textAnchor","dominantBaseline","Object","assign","r","sin","PI","cos","centerLabelStyle","centerLabelClassName","PropTypes","array","isRequired","CustomPropTypes","getter","number","string","object","func","oneOfType","percentValue","overhangOuter","overhangInner","endPercent","startX","startY","c","rH","x0","y0","r0","r1","max","join","endX","endY","largeArc","x1","y1","concat"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { methodIfFuncProp } from \"./util.js\";\nimport * as CustomPropTypes from \"./utils/CustomPropTypes\";\nimport { getValue, makeAccessor } from \"./utils/Data\";\n\n// default height/width, used only if height & width & radius are all undefined\nconst DEFAULT_SIZE = 150;\n\n/**\n * `PieChart` is a circular graphic that is divided into slices to illustrate proportions or percentages.\n */\nclass PieChart extends React.Component {\n  static propTypes = {\n    /**\n     * Array of data to plot with pie chart.\n     */\n    data: PropTypes.array.isRequired,\n    /**\n     * Accessor for getting the values plotted on the pie chart.\n     * If not provided, just uses the value itself at given index.\n     */\n    getValue: CustomPropTypes.getter,\n    /**\n     * Total expected sum of all the pie slice values.\n     * If provided && slices don't add up to total, an \"empty\" slice will be rendered for the rest\n     * If not provided, will be the sum of all values (ie. all values will always add up to 100%)\n     */\n    total: PropTypes.number,\n    /**\n     * Optional width of the SVG\n     * if not passed in and height is passed in, same # is used for both (ie. width=100 means height=100 also)\n     * if neither is passed, but radius is, radius+margins is used\n     * if neither is passed, and radius isn't either, 150 is used\n     */\n    width: PropTypes.number,\n    /**\n     * Optional height of the SVG\n     * if not passed in and width is passed in, same # is used for both (ie. width=100 means height=100 also)\n     * if neither is passed, but radius is, radius+margins is used\n     * if neither is passed, and radius isn't either, 150 is used\n     */\n    height: PropTypes.number,\n    /**\n     * Optional radius of the pie chart, inferred from margin/width/height if not provided.\n     */\n    radius: PropTypes.number,\n    marginTop: PropTypes.number,\n    marginBottom: PropTypes.number,\n    marginLeft: PropTypes.number,\n    marginRight: PropTypes.number,\n    /**\n     * Optional radius of the \"donut hole\" circle drawn on top of the pie chart to turn it into a donut chart.\n     */\n    holeRadius: PropTypes.number,\n    /**\n     * Optional label text to display in the middle of the pie/donut.\n     */\n    centerLabel: PropTypes.string,\n    /**\n     * Class attribute to be applied to center label.\n     */\n    centerLabelClassName: PropTypes.string,\n    /**\n     * Inline style object to be applied to center label.\n     */\n    centerLabelStyle: PropTypes.object,\n    /**\n     * Accessor for getting labels that are rendered outside each slice of the pie chart.\n     * If not provided no labels will be rendered.\n     */\n    getPieSliceLabel: PropTypes.func,\n    /**\n     * Inline style object applied to each slice label.\n     * When a function is provided it will receive the value for the slice and should return the\n     * style object for that slice's label.\n     * Used along with `getPieSliceLabel`.\n     */\n    pieSliceLabelStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    /**\n     * Distance to render the label from the outer edge of the pie chart. Positive numbers will\n     * move away from the center and negative numbers will move toward the center.\n     * When a function is provided it will receive the value for the slice and should return the\n     * distance for that slice's label.\n     * Used along with `getPieSliceLabel`.\n     */\n    pieSliceLabelDistance: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.func\n    ]),\n    /**\n     * Class attribute to be applied to each pie slice,\n     * or accessor function which returns a class.\n     */\n    pieSliceClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    /**\n     * Value for where to place markerline.\n     */\n    markerLineValue: PropTypes.number,\n    /**\n     * Class attribute to be applied to marker line.\n     */\n    markerLineClassName: PropTypes.string,\n    /**\n     * Inline style object to be applied to marker line.\n     */\n    markerLineStyle: PropTypes.object,\n    /**\n     * Number of pixels marker line hangs inside the pie chart.\n     */\n    markerLineOverhangInner: PropTypes.number,\n    /**\n     * Number of pixels marker line hangs outside the pie chart.\n     */\n    markerLineOverhangOuter: PropTypes.number,\n    /**\n     * `mouseenter` event handler callback, called when user's mouse enters the marker line.\n     */\n    onMouseEnterLine: PropTypes.func,\n    /**\n     * `mousemove` event handler callback, called when user's mouse moves within the marker line.\n     */\n    onMouseMoveLine: PropTypes.func,\n    /**\n     * `mouseleave` event handler callback, called when user's mouse leaves the marker line.\n     */\n    onMouseLeaveLine: PropTypes.func,\n    /**\n     * `mouseenter` event handler callback, called when user's mouse enters a pie slice.\n     */\n    onMouseEnterSlice: PropTypes.func,\n    /**\n     * `mousemove` event handler callback, called when user's mouse moves within a pie slice.\n     */\n    onMouseMoveSlice: PropTypes.func,\n    /**\n     * `mouseleave` event handler callback, called when user's mouse leaves a pie slice.\n     */\n    onMouseLeaveSlice: PropTypes.func\n  };\n  static defaultProps = {\n    getValue: null,\n    centerLabelClassName: \"\",\n    centerLabelStyle: {},\n    pieSliceClassName: \"\",\n    markerLineClassName: \"\",\n    markerLineOverhangInner: 2,\n    markerLineOverhangOuter: 2,\n    markerLineStyle: {},\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: 0,\n    marginRight: 0\n  };\n\n  onMouseEnterSlice = (e, d) => {\n    this.props.onMouseEnterSlice(e, d);\n  };\n  onMouseMoveSlice = (e, d) => {\n    this.props.onMouseMoveSlice(e, d);\n  };\n  onMouseLeaveSlice = (e, d) => {\n    this.props.onMouseLeaveSlice(e, d);\n  };\n\n  onMouseEnterLine = (e, d) => {\n    this.props.onMouseEnterLine(e, d);\n  };\n  onMouseMoveLine = (e, d) => {\n    this.props.onMouseMoveLine(e, d);\n  };\n  onMouseLeaveLine = (e, d) => {\n    this.props.onMouseLeaveLine(e, d);\n  };\n\n  render() {\n    const {\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom,\n      holeRadius\n    } = this.props;\n\n    // sizes fallback based on provided info: given dimension -> radius + margin -> other dimension -> default\n    const width =\n      this.props.width ||\n      (this.props.radius\n        ? this.props.radius * 2 + marginLeft + marginRight\n        : this.props.height) ||\n      DEFAULT_SIZE;\n    const height =\n      this.props.height ||\n      (this.props.radius\n        ? this.props.radius * 2 + marginTop + marginBottom\n        : this.props.width) ||\n      DEFAULT_SIZE;\n    const radius =\n      this.props.radius ||\n      Math.min(\n        (width - (marginLeft + marginRight)) / 2,\n        (height - (marginTop + marginBottom)) / 2\n      );\n    const center = { x: marginLeft + radius, y: marginTop + radius };\n\n    const {\n      markerLineValue,\n      pieSliceClassName,\n      markerLineOverhangInner,\n      markerLineOverhangOuter\n    } = this.props;\n\n    const valueAccessor = makeAccessor(this.props.getValue);\n    const sum = _.sumBy(this.props.data, valueAccessor);\n    const total = this.props.total || sum;\n    const markerLinePercent = _.isFinite(markerLineValue)\n      ? markerLineValue / total\n      : null;\n\n    let startPercent = 0;\n    const slices = this.props.data.map((d, i) => {\n      const slicePercent = valueAccessor(d) / total;\n      const slice = {\n        start: startPercent,\n        end: startPercent + slicePercent\n      };\n      startPercent += slicePercent;\n\n      return slice;\n    });\n\n    return (\n      <svg className=\"rct-pie-chart\" {...{ width, height }}>\n        {this.props.data.map((d, i) => {\n          const [onMouseEnter, onMouseMove, onMouseLeave] = [\n            \"onMouseEnterSlice\",\n            \"onMouseMoveSlice\",\n            \"onMouseLeaveSlice\"\n          ].map(eventName => {\n            // partially apply this bar's data point as 2nd callback argument\n            const callback = methodIfFuncProp(eventName, this.props, this);\n            return _.isFunction(callback) ? _.partial(callback, _, d) : null;\n          });\n\n          const className = `rct-pie-slice rct-pie-slice-${i} ${getValue(\n            pieSliceClassName,\n            d,\n            i\n          ) || \"\"}`;\n          const slice = slices[i];\n          const pathStr = pieSlicePath(\n            slice.start,\n            slice.end,\n            center,\n            radius,\n            holeRadius\n          );\n          const key = `pie-slice-${i}`;\n\n          return (\n            <path\n              {...{\n                className,\n                d: pathStr,\n                onMouseEnter,\n                onMouseMove,\n                onMouseLeave,\n                key\n              }}\n            />\n          );\n        })}\n\n        {sum < total ? ( // draw empty slice if the sum of slices is less than expected total\n          <path\n            className={`rct-pie-slice rct-pie-slice-empty`}\n            d={pieSlicePath(startPercent, 1, center, radius, holeRadius)}\n            key=\"pie-slice-empty\"\n          />\n        ) : null}\n\n        {_.isFinite(markerLinePercent)\n          ? this.renderMarkerLine(\n              markerLine(\n                markerLinePercent,\n                center,\n                radius,\n                holeRadius,\n                markerLineOverhangOuter,\n                markerLineOverhangInner\n              )\n            )\n          : null}\n\n        {this.props.centerLabel ? this.renderCenterLabel(center) : null}\n        {this.props.getPieSliceLabel\n          ? this.props.data.map((d, i) =>\n              this.renderSliceLabel(d, slices[i], center, radius, i)\n            )\n          : null}\n      </svg>\n    );\n  }\n\n  renderMarkerLine(pathData) {\n    const { markerLineClassName, markerLineStyle } = this.props;\n    const lineD = {\n      value: this.props.markerLineValue\n    };\n\n    const [onMouseEnter, onMouseMove, onMouseLeave] = [\n      \"onMouseEnterLine\",\n      \"onMouseMoveLine\",\n      \"onMouseLeaveLine\"\n    ].map(eventName => {\n      // partially apply this bar's data point as 2nd callback argument\n      const callback = methodIfFuncProp(eventName, this.props, this);\n      return _.isFunction(callback) ? _.partial(callback, _, lineD) : null;\n    });\n\n    return (\n      <path\n        style={markerLineStyle}\n        className={`rct-marker-line ${markerLineClassName}`}\n        d={pathData}\n        {...{ onMouseEnter, onMouseMove, onMouseLeave }}\n      />\n    );\n  }\n\n  renderSliceLabel(value, slice, center, radius, index) {\n    const {\n      getPieSliceLabel,\n      pieSliceLabelStyle,\n      pieSliceLabelDistance\n    } = this.props;\n    const labelPercent = (slice.end - slice.start) / 2 + slice.start;\n    const style = {\n      textAnchor: \"middle\",\n      dominantBaseline: \"central\"\n    };\n\n    if (pieSliceLabelStyle) {\n      Object.assign(style, getValue(pieSliceLabelStyle, value));\n    }\n\n    const r = pieSliceLabelDistance\n      ? radius + getValue(pieSliceLabelDistance, value)\n      : radius;\n    const x = center.x + Math.sin((2 * Math.PI) / (1 / labelPercent)) * r;\n    const y = center.y - Math.cos((2 * Math.PI) / (1 / labelPercent)) * r;\n\n    return (\n      <text key={index} x={x} y={y} style={style}>\n        {getPieSliceLabel(value)}\n      </text>\n    );\n  }\n\n  renderCenterLabel(center) {\n    const { centerLabelStyle, centerLabelClassName, centerLabel } = this.props;\n    const { x, y } = center;\n    const style = Object.assign(\n      {},\n      { textAnchor: \"middle\", dominantBaseline: \"central\" },\n      centerLabelStyle\n    );\n\n    return (\n      <text\n        className={`rct-pie-label-center ${centerLabelClassName}`}\n        {...{ x, y, style }}\n      >\n        {centerLabel}\n      </text>\n    );\n  }\n}\n\nfunction markerLine(\n  percentValue,\n  center,\n  radius,\n  holeRadius = 0,\n  overhangOuter = 0,\n  overhangInner = 0\n) {\n  if (percentValue == 1) endPercent = 0.9999999; // arc cannot be a full circle\n  const startX = Math.sin((2 * Math.PI) / (1 / percentValue));\n  const startY = Math.cos((2 * Math.PI) / (1 / percentValue));\n  const [c, r, rH, x0, y0] = [center, radius, holeRadius, startX, startY];\n  const [r0, r1] = [Math.max(rH - overhangInner, 0), r + overhangOuter];\n\n  return [\n    // construct a string representing the marker line\n    `M ${c.x + x0 * r0},${c.y - y0 * r0}`, // start at edge of inner (hole) circle, or center if no hole\n    `L ${c.x + x0 * r1},${c.y - y0 * r1} z` // straight line to outer circle, along radius\n  ].join(\" \");\n}\n\nfunction pieSlicePath(\n  startPercent,\n  endPercent,\n  center,\n  radius,\n  holeRadius = 0\n) {\n  if (endPercent == 1) endPercent = 0.9999999; // arc cannot be a full circle\n  const startX = Math.sin((2 * Math.PI) / (1 / startPercent));\n  const startY = Math.cos((2 * Math.PI) / (1 / startPercent));\n  const endX = Math.sin((2 * Math.PI) / (1 / endPercent));\n  const endY = Math.cos((2 * Math.PI) / (1 / endPercent));\n\n  const largeArc = endPercent - startPercent <= 0.5 ? 0 : 1;\n  const [c, r, rH, x0, x1, y0, y1] = [\n    center,\n    radius,\n    holeRadius,\n    startX,\n    endX,\n    startY,\n    endY\n  ];\n\n  return [\n    // construct a string representing the pie slice path\n    `M ${c.x + x0 * rH},${c.y - y0 * rH}`, // start at edge of inner (hole) circle, or center if no hole\n    `L ${c.x + x0 * r},${c.y - y0 * r}`, // straight line to outer circle, along radius\n    `A ${r},${r} 0 ${largeArc} 1 ${c.x + x1 * r},${c.y - y1 * r}` // outer arc\n  ]\n    .concat(\n      holeRadius\n        ? [\n            // if we have an inner (donut) hole, draw an inner arc too, otherwise we're done\n            `L ${c.x + x1 * rH},${c.y - y1 * rH}`, // straight line to inner (hole) circle, along radius\n            `A ${rH},${rH} 0 ${largeArc} 0 ${c.x + x0 * rH},${c.y - y0 * rH} z` // inner arc\n          ]\n        : \"z\"\n    )\n    .join(\" \");\n}\n\nexport default PieChart;\n"],"file":"PieChart.js"}