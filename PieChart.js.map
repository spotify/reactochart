{"version":3,"sources":["src/PieChart.js"],"names":["CustomPropTypes","DEFAULT_PROPS","getValue","margin","top","bottom","left","right","markerLineClass","markerLineOverhangInner","markerLineOverhangOuter","DEFAULT_SIZE","PieChart","onMouseEnterSlice","e","d","props","onMouseMoveSlice","onMouseLeaveSlice","onMouseEnterLine","onMouseMoveLine","onMouseLeaveLine","isNumber","defaults","width","radius","height","Math","min","holeRadius","center","x","y","markerLineValue","valueAccessor","sum","sumBy","data","total","markerLinePercent","isFinite","startPercent","map","i","callback","eventName","isFunction","partial","onMouseEnter","onMouseMove","onMouseLeave","className","slicePercent","endPercent","pathStr","pieSlicePath","key","renderMarkerLine","markerLine","centerLabel","renderCenterLabel","pathData","lineD","value","style","textAnchor","dominantBaseline","Component","propTypes","array","isRequired","getter","number","oneOfType","object","string","func","defaultProps","percentValue","overhangOuter","overhangInner","startX","sin","PI","startY","cos","c","r","rH","x0","y0","max","r0","r1","join","endX","endY","largeArc","x1","y1","concat"],"mappings":"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","file":"PieChart.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nimport { methodIfFuncProp } from \"./util.js\";\nimport { makeAccessor } from \"./utils/Data\";\nimport * as CustomPropTypes from \"./utils/CustomPropTypes\";\n\nconst DEFAULT_PROPS = {\n  getValue: null,\n  margin: { top: 0, bottom: 0, left: 0, right: 0 },\n  markerLineClass: \"marker-line\",\n  markerLineOverhangInner: 2,\n  markerLineOverhangOuter: 2\n};\n\n// default height/width, used only if height & width & radius are all undefined\nconst DEFAULT_SIZE = 150;\n\nclass PieChart extends React.Component {\n  static propTypes = {\n    // array of data to plot with pie chart\n    data: PropTypes.array.isRequired,\n    // (optional) accessor for getting the values plotted on the pie chart\n    // if not provided, just uses the value itself at given index\n    getValue: CustomPropTypes.getter,\n    // (optional) total expected sum of all the pie slice values\n    // if provided && slices don't add up to total, an \"empty\" slice will be rendered for the rest\n    // if not provided, will be the sum of all values (ie. all values will always add up to 100%)\n    total: PropTypes.number,\n    // (optional) height and width of the SVG\n    // if only one is passed, same # is used for both (ie. width=100 means height=100 also)\n    // if neither is passed, but radius is, radius+margins is used\n    // if neither is passed, and radius isn't either, DEFAULTS.size is used\n    width: PropTypes.number,\n    height: PropTypes.number,\n    // (optional) main radius of the pie chart, inferred from margin/width/height if not provided\n    radius: PropTypes.number,\n    // (optional) margins (between svg edges and pie circle), inferred from radius/width/height if not provided\n    // can either be a single number (to make all margins equal), or {top, bottom, left, right} object\n    margin: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    // (optional) radius of the \"donut hole\" circle drawn on top of the pie chart to turn it into a donut chart\n    holeRadius: PropTypes.number,\n    // (optional) label text to display in the middle of the pie/donut\n    centerLabel: PropTypes.string,\n\n    markerLineValue: PropTypes.number,\n    markerLineClass: PropTypes.string,\n    markerLineOverhangInner: PropTypes.number,\n    markerLineOverhangOuter: PropTypes.number,\n\n    onMouseEnterLine: PropTypes.func,\n    onMouseMoveLine: PropTypes.func,\n    onMouseLeaveLine: PropTypes.func\n  };\n  static defaultProps = DEFAULT_PROPS;\n\n  onMouseEnterSlice = (e, d) => {\n    this.props.onMouseEnterSlice(e, d);\n  };\n  onMouseMoveSlice = (e, d) => {\n    this.props.onMouseMoveSlice(e, d);\n  };\n  onMouseLeaveSlice = (e, d) => {\n    this.props.onMouseLeaveSlice(e, d);\n  };\n\n  onMouseEnterLine = (e, d) => {\n    this.props.onMouseEnterLine(e, d);\n  };\n  onMouseMoveLine = (e, d) => {\n    this.props.onMouseMoveLine(e, d);\n  };\n  onMouseLeaveLine = (e, d) => {\n    this.props.onMouseLeaveLine(e, d);\n  };\n\n  render() {\n    const margin = _.isNumber(this.props.margin)\n      ? {\n          top: this.props.margin,\n          bottom: this.props.margin,\n          left: this.props.margin,\n          right: this.props.margin\n        }\n      : _.defaults({}, this.props.margin, DEFAULT_PROPS.margin);\n    // sizes fallback based on provided info: given dimension -> radius + margin -> other dimension -> default\n    const width =\n      this.props.width ||\n      (this.props.radius\n        ? this.props.radius * 2 + margin.left + margin.right\n        : this.props.height) ||\n      DEFAULT_SIZE;\n    const height =\n      this.props.height ||\n      (this.props.radius\n        ? this.props.radius * 2 + margin.top + margin.bottom\n        : this.props.width) ||\n      DEFAULT_SIZE;\n    const radius =\n      this.props.radius ||\n      Math.min(\n        (width - (margin.left + margin.right)) / 2,\n        (height - (margin.top + margin.bottom)) / 2\n      );\n    const { holeRadius } = this.props;\n    const center = { x: margin.left + radius, y: margin.top + radius };\n\n    const {\n      markerLineValue,\n      markerLineClass,\n      markerLineOverhangInner,\n      markerLineOverhangOuter\n    } = this.props;\n\n    const valueAccessor = makeAccessor(this.props.getValue);\n    const sum = _.sumBy(this.props.data, valueAccessor);\n    const total = this.props.total || sum;\n    const markerLinePercent = _.isFinite(markerLineValue)\n      ? markerLineValue / total\n      : null;\n\n    let startPercent = 0;\n    return (\n      <svg className=\"pie-chart\" {...{ width, height }}>\n        {this.props.data.map((d, i) => {\n          const [onMouseEnter, onMouseMove, onMouseLeave] = [\n            \"onMouseEnterSlice\",\n            \"onMouseMoveSlice\",\n            \"onMouseLeaveSlice\"\n          ].map(eventName => {\n            // partially apply this bar's data point as 2nd callback argument\n            const callback = methodIfFuncProp(eventName, this.props, this);\n            return _.isFunction(callback) ? _.partial(callback, _, d) : null;\n          });\n\n          const className = `pie-slice pie-slice-${i}`;\n          const slicePercent = valueAccessor(d) / total;\n          const endPercent = startPercent + slicePercent;\n          const pathStr = pieSlicePath(\n            startPercent,\n            endPercent,\n            center,\n            radius,\n            holeRadius\n          );\n          startPercent += slicePercent;\n          const key = `pie-slice-${i}`;\n\n          return (\n            <path\n              {...{\n                className,\n                d: pathStr,\n                onMouseEnter,\n                onMouseMove,\n                onMouseLeave,\n                key\n              }}\n            />\n          );\n        })}\n\n        {sum < total ? ( // draw empty slice if the sum of slices is less than expected total\n          <path\n            className=\"pie-slice pie-slice-empty\"\n            d={pieSlicePath(startPercent, 1, center, radius, holeRadius)}\n            key=\"pie-slice-empty\"\n          />\n        ) : null}\n\n        {_.isFinite(markerLinePercent)\n          ? this.renderMarkerLine(\n              markerLineClass,\n              markerLine(\n                markerLinePercent,\n                center,\n                radius,\n                holeRadius,\n                markerLineOverhangOuter,\n                markerLineOverhangInner\n              ),\n              \"pie-slice-marker-line\"\n            )\n          : null}\n\n        {this.props.centerLabel ? this.renderCenterLabel(center) : null}\n      </svg>\n    );\n  }\n\n  renderMarkerLine(className, pathData, key) {\n    const lineD = {\n      value: this.props.markerLineValue\n    };\n\n    const [onMouseEnter, onMouseMove, onMouseLeave] = [\n      \"onMouseEnterLine\",\n      \"onMouseMoveLine\",\n      \"onMouseLeaveLine\"\n    ].map(eventName => {\n      // partially apply this bar's data point as 2nd callback argument\n      const callback = methodIfFuncProp(eventName, this.props, this);\n      return _.isFunction(callback) ? _.partial(callback, _, lineD) : null;\n    });\n\n    return (\n      <path\n        className={className}\n        d={pathData}\n        key={key}\n        {...{ onMouseEnter, onMouseMove, onMouseLeave }}\n      />\n    );\n  }\n\n  renderCenterLabel(center) {\n    const { x, y } = center;\n    const style = { textAnchor: \"middle\", dominantBaseline: \"central\" };\n    return (\n      <text className=\"pie-label-center\" {...{ x, y, style }}>\n        {this.props.centerLabel}\n      </text>\n    );\n  }\n}\n\nfunction markerLine(\n  percentValue,\n  center,\n  radius,\n  holeRadius = 0,\n  overhangOuter = 0,\n  overhangInner = 0\n) {\n  if (percentValue == 1) endPercent = 0.9999999; // arc cannot be a full circle\n  const startX = Math.sin(2 * Math.PI / (1 / percentValue));\n  const startY = Math.cos(2 * Math.PI / (1 / percentValue));\n  const [c, r, rH, x0, y0] = [center, radius, holeRadius, startX, startY];\n  const [r0, r1] = [Math.max(rH - overhangInner, 0), r + overhangOuter];\n\n  return [\n    // construct a string representing the marker line\n    `M ${c.x + x0 * r0},${c.y - y0 * r0}`, // start at edge of inner (hole) circle, or center if no hole\n    `L ${c.x + x0 * r1},${c.y - y0 * r1} z` // straight line to outer circle, along radius\n  ].join(\" \");\n}\n\nfunction pieSlicePath(\n  startPercent,\n  endPercent,\n  center,\n  radius,\n  holeRadius = 0\n) {\n  if (endPercent == 1) endPercent = 0.9999999; // arc cannot be a full circle\n  const startX = Math.sin(2 * Math.PI / (1 / startPercent));\n  const startY = Math.cos(2 * Math.PI / (1 / startPercent));\n  const endX = Math.sin(2 * Math.PI / (1 / endPercent));\n  const endY = Math.cos(2 * Math.PI / (1 / endPercent));\n  const largeArc = endPercent - startPercent <= 0.5 ? 0 : 1;\n  const [c, r, rH, x0, x1, y0, y1] = [\n    center,\n    radius,\n    holeRadius,\n    startX,\n    endX,\n    startY,\n    endY\n  ];\n\n  return [\n    // construct a string representing the pie slice path\n    `M ${c.x + x0 * rH},${c.y - y0 * rH}`, // start at edge of inner (hole) circle, or center if no hole\n    `L ${c.x + x0 * r},${c.y - y0 * r}`, // straight line to outer circle, along radius\n    `A ${r},${r} 0 ${largeArc} 1 ${c.x + x1 * r},${c.y - y1 * r}` // outer arc\n  ]\n    .concat(\n      holeRadius\n        ? [\n            // if we have an inner (donut) hole, draw an inner arc too, otherwise we're done\n            `L ${c.x + x1 * rH},${c.y - y1 * rH}`, // straight line to inner (hole) circle, along radius\n            `A ${rH},${rH} 0 ${largeArc} 0 ${c.x + x0 * rH},${c.y - y0 * rH} z` // inner arc\n          ]\n        : \"z\"\n    )\n    .join(\" \");\n}\n\nexport default PieChart;\n"]}