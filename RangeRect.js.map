{"version":3,"sources":["src/RangeRect.js"],"names":["CustomPropTypes","RangeRect","props","xScale","yScale","x","xEnd","y","yEnd","style","onMouseEnter","onMouseMove","onMouseLeave","className","x0","x1","y0","y1","rectX","Math","min","rectY","width","abs","height","Component","propTypes","func","oneOfType","datumValueTypes","isRequired","string","object","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;IAAYA,e;;AACZ;;;;;;;;;;;;AAEA;;;;;;IAMqBC,S;;;;;;;;;;;6BAoDV;AAAA,mBAYH,KAAKC,KAZF;AAAA,UAELC,MAFK,UAELA,MAFK;AAAA,UAGLC,MAHK,UAGLA,MAHK;AAAA,UAILC,CAJK,UAILA,CAJK;AAAA,UAKLC,IALK,UAKLA,IALK;AAAA,UAMLC,CANK,UAMLA,CANK;AAAA,UAOLC,IAPK,UAOLA,IAPK;AAAA,UAQLC,KARK,UAQLA,KARK;AAAA,UASLC,YATK,UASLA,YATK;AAAA,UAULC,WAVK,UAULA,WAVK;AAAA,UAWLC,YAXK,UAWLA,YAXK;;;AAcP,+BACE,yBAAaT,MAAb,CADF;AAIA,+BACE,yBAAaC,MAAb,CADF;;AAKA,UAAMS,mCAAgC,KAAKX,KAAL,CAAWW,SAAX,IAAwB,EAAxD,CAAN;AACA,UAAMC,KAAKX,OAAOE,CAAP,CAAX;AACA,UAAMU,KAAKZ,OAAOG,IAAP,CAAX;AACA,UAAMU,KAAKZ,OAAOG,CAAP,CAAX;AACA,UAAMU,KAAKb,OAAOI,IAAP,CAAX;AACA,UAAMU,QAAQC,KAAKC,GAAL,CAASN,EAAT,EAAaC,EAAb,CAAd;AACA,UAAMM,QAAQF,KAAKC,GAAL,CAASJ,EAAT,EAAaC,EAAb,CAAd;AACA,UAAMK,QAAQH,KAAKI,GAAL,CAASR,KAAKD,EAAd,CAAd;AACA,UAAMU,SAASL,KAAKI,GAAL,CAASN,KAAKD,EAAd,CAAf;;AAEA,aACE,sCACM;AACFX,WAAGa,KADD;AAEFX,WAAGc,KAFD;AAGFC,oBAHE;AAIFE,sBAJE;AAKFX,4BALE;AAMFJ,oBANE;AAOFC,kCAPE;AAQFC,gCARE;AASFC;AATE,OADN,CADF;AAeD;;;;EApGoC,gBAAMa,S;;AAAxBxB,S,CACZyB,S,GAAY;AACjB;;;AAGAvB,UAAQ,oBAAUwB,IAJD;AAKjB;;;AAGAvB,UAAQ,oBAAUuB,IARD;AASjB;;;AAGAtB,KAAG,oBAAUuB,SAAV,CAAoB5B,gBAAgB6B,eAApC,EAAqDC,UAZvC;AAajB;;;AAGAxB,QAAM,oBAAUsB,SAAV,CAAoB5B,gBAAgB6B,eAApC,EAAqDC,UAhB1C;AAiBjB;;;AAGAvB,KAAG,oBAAUqB,SAAV,CAAoB5B,gBAAgB6B,eAApC,EAAqDC,UApBvC;AAqBjB;;;AAGAtB,QAAM,oBAAUoB,SAAV,CAAoB5B,gBAAgB6B,eAApC,EAAqDC,UAxB1C;AAyBjB;;;AAGAjB,aAAW,oBAAUkB,MA5BJ;AA6BjB;;;AAGAtB,SAAO,oBAAUuB,MAhCA;AAiCjB;;;AAGArB,eAAa,oBAAUgB,IApCN;AAqCjB;;;AAGAjB,gBAAc,oBAAUiB,IAxCP;AAyCjB;;;AAGAf,gBAAc,oBAAUe;AA5CP,C;AADA1B,S,CA+CZgC,Y,GAAe;AACpBpB,aAAW,EADS;AAEpBJ,SAAO;AAFa,C;kBA/CHR,S","file":"RangeRect.js","sourcesContent":["import React from \"react\";\nimport invariant from \"invariant\";\nimport PropTypes from \"prop-types\";\nimport * as CustomPropTypes from \"./utils/CustomPropTypes\";\nimport { isValidScale } from \"./utils/Scale\";\n\n/**\n * RangeRect is a low-level component to be used in XYPlot-type charts (namely AreaBarChart).\n * It is a rectangle which represents a range (min & max) of values on both (X & Y) axes.\n * It takes a single datum object, and getters which specify how to retrieve the range values from it.\n */\n\nexport default class RangeRect extends React.Component {\n  static propTypes = {\n    /**\n     * D3 scale for the X (horizontal) axis.\n     */\n    xScale: PropTypes.func,\n    /**\n     * D3 scale for the Y (vertical) axis.\n     */\n    yScale: PropTypes.func,\n    /**\n     * Starting (minimum) X value (left edge, usually) of the rectangle range\n     */\n    x: PropTypes.oneOfType(CustomPropTypes.datumValueTypes).isRequired,\n    /**\n     * Ending (maximum) X value (right edge, usually) of the rectangle range\n     */\n    xEnd: PropTypes.oneOfType(CustomPropTypes.datumValueTypes).isRequired,\n    /**\n     * Starting (minimum) Y value (bottom edge, usually) of the rectangle range\n     */\n    y: PropTypes.oneOfType(CustomPropTypes.datumValueTypes).isRequired,\n    /**\n     * Ending (maximum) Y value (top edge, usually) of the rectangle range\n     */\n    yEnd: PropTypes.oneOfType(CustomPropTypes.datumValueTypes).isRequired,\n    /**\n     * Class attribute to be applied to the rectangle element\n     */\n    className: PropTypes.string,\n    /**\n     * Inline style object to be applied to the rectangle element\n     */\n    style: PropTypes.object,\n    /**\n     * `mousemove` event handler callback, called when user's mouse moves within the rectangle.\n     */\n    onMouseMove: PropTypes.func,\n    /**\n     * `mouseenter` event handler callback, called when user's mouse enters the rectangle.\n     */\n    onMouseEnter: PropTypes.func,\n    /**\n     * `mouseleave` event handler callback, called when user's mouse leaves the rectangle.\n     */\n    onMouseLeave: PropTypes.func\n  };\n  static defaultProps = {\n    className: \"\",\n    style: {}\n  };\n\n  render() {\n    const {\n      xScale,\n      yScale,\n      x,\n      xEnd,\n      y,\n      yEnd,\n      style,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave\n    } = this.props;\n\n    invariant(\n      isValidScale(xScale),\n      `RangeRect.props.xScale is not a valid d3 scale`\n    );\n    invariant(\n      isValidScale(yScale),\n      `RangeRect.props.yScale is not a valid d3 scale`\n    );\n\n    const className = `chart-range-rect ${this.props.className || \"\"}`;\n    const x0 = xScale(x);\n    const x1 = xScale(xEnd);\n    const y0 = yScale(y);\n    const y1 = yScale(yEnd);\n    const rectX = Math.min(x0, x1);\n    const rectY = Math.min(y0, y1);\n    const width = Math.abs(x1 - x0);\n    const height = Math.abs(y1 - y0);\n\n    return (\n      <rect\n        {...{\n          x: rectX,\n          y: rectY,\n          width,\n          height,\n          className,\n          style,\n          onMouseEnter,\n          onMouseMove,\n          onMouseLeave\n        }}\n      />\n    );\n  }\n}\n"]}