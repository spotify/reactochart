{"version":3,"sources":["src/RangeRect.js"],"names":["RangeRect","React","Component","render","xScale","yScale","x","xEnd","y","yEnd","style","onMouseEnter","onMouseMove","onMouseLeave","className","props","x0","x1","y0","y1","rectX","Math","min","rectY","width","abs","height","PropTypes","func","oneOfType","CustomPropTypes","datumValueTypes","isRequired","string","object"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA;;;;;AAMe,MAAMA,SAAN,SAAwBC,eAAMC,SAA9B,CAAwC;AAoDrDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,MAFI;AAGJC,MAAAA,CAHI;AAIJC,MAAAA,IAJI;AAKJC,MAAAA,CALI;AAMJC,MAAAA,IANI;AAOJC,MAAAA,KAPI;AAQJC,MAAAA,YARI;AASJC,MAAAA,WATI;AAUJC,MAAAA,YAVI;AAWJC,MAAAA;AAXI,QAYF,KAAKC,KAZT;AAcA,4BACE,yBAAaX,MAAb,CADF;AAIA,4BACE,yBAAaC,MAAb,CADF;AAKA,UAAMW,EAAE,GAAGZ,MAAM,CAACE,CAAD,CAAjB;AACA,UAAMW,EAAE,GAAGb,MAAM,CAACG,IAAD,CAAjB;AACA,UAAMW,EAAE,GAAGb,MAAM,CAACG,CAAD,CAAjB;AACA,UAAMW,EAAE,GAAGd,MAAM,CAACI,IAAD,CAAjB;AACA,UAAMW,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASN,EAAT,EAAaC,EAAb,CAAd;AACA,UAAMM,KAAK,GAAGF,IAAI,CAACC,GAAL,CAASJ,EAAT,EAAaC,EAAb,CAAd;AACA,UAAMK,KAAK,GAAGH,IAAI,CAACI,GAAL,CAASR,EAAE,GAAGD,EAAd,CAAd;AACA,UAAMU,MAAM,GAAGL,IAAI,CAACI,GAAL,CAASN,EAAE,GAAGD,EAAd,CAAf;AAEA,WACE,qCACM;AACFZ,MAAAA,CAAC,EAAEc,KADD;AAEFZ,MAAAA,CAAC,EAAEe,KAFD;AAGFC,MAAAA,KAHE;AAIFE,MAAAA,MAJE;AAKFZ,MAAAA,SALE;AAMFJ,MAAAA,KANE;AAOFC,MAAAA,YAPE;AAQFC,MAAAA,WARE;AASFC,MAAAA;AATE,KADN,CADF;AAeD;;AApGoD;;;;gBAAlCb,S,eACA;AACjB;;;AAGAI,EAAAA,MAAM,EAAEuB,mBAAUC,IAJD;;AAKjB;;;AAGAvB,EAAAA,MAAM,EAAEsB,mBAAUC,IARD;;AASjB;;;AAGAtB,EAAAA,CAAC,EAAEqB,mBAAUE,SAAV,CAAoBC,eAAe,CAACC,eAApC,EAAqDC,UAZvC;;AAajB;;;AAGAzB,EAAAA,IAAI,EAAEoB,mBAAUE,SAAV,CAAoBC,eAAe,CAACC,eAApC,EAAqDC,UAhB1C;;AAiBjB;;;AAGAxB,EAAAA,CAAC,EAAEmB,mBAAUE,SAAV,CAAoBC,eAAe,CAACC,eAApC,EAAqDC,UApBvC;;AAqBjB;;;AAGAvB,EAAAA,IAAI,EAAEkB,mBAAUE,SAAV,CAAoBC,eAAe,CAACC,eAApC,EAAqDC,UAxB1C;;AAyBjB;;;AAGAlB,EAAAA,SAAS,EAAEa,mBAAUM,MA5BJ;;AA6BjB;;;AAGAvB,EAAAA,KAAK,EAAEiB,mBAAUO,MAhCA;;AAiCjB;;;AAGAtB,EAAAA,WAAW,EAAEe,mBAAUC,IApCN;;AAqCjB;;;AAGAjB,EAAAA,YAAY,EAAEgB,mBAAUC,IAxCP;;AAyCjB;;;AAGAf,EAAAA,YAAY,EAAEc,mBAAUC;AA5CP,C;;gBADA5B,S,kBA+CG;AACpBc,EAAAA,SAAS,EAAE,EADS;AAEpBJ,EAAAA,KAAK,EAAE;AAFa,C","sourcesContent":["import React from \"react\";\nimport invariant from \"invariant\";\nimport PropTypes from \"prop-types\";\nimport * as CustomPropTypes from \"./utils/CustomPropTypes\";\nimport { isValidScale } from \"./utils/Scale\";\n\n/**\n * RangeRect is a low-level component to be used in XYPlot-type charts (namely AreaBarChart).\n * It is a rectangle which represents a range (min & max) of values on both (X & Y) axes.\n * It takes a single datum object, and getters which specify how to retrieve the range values from it.\n */\n\nexport default class RangeRect extends React.Component {\n  static propTypes = {\n    /**\n     * D3 scale for the X (horizontal) axis.\n     */\n    xScale: PropTypes.func,\n    /**\n     * D3 scale for the Y (vertical) axis.\n     */\n    yScale: PropTypes.func,\n    /**\n     * Starting (minimum) X value (left edge, usually) of the rectangle range\n     */\n    x: PropTypes.oneOfType(CustomPropTypes.datumValueTypes).isRequired,\n    /**\n     * Ending (maximum) X value (right edge, usually) of the rectangle range\n     */\n    xEnd: PropTypes.oneOfType(CustomPropTypes.datumValueTypes).isRequired,\n    /**\n     * Starting (minimum) Y value (bottom edge, usually) of the rectangle range\n     */\n    y: PropTypes.oneOfType(CustomPropTypes.datumValueTypes).isRequired,\n    /**\n     * Ending (maximum) Y value (top edge, usually) of the rectangle range\n     */\n    yEnd: PropTypes.oneOfType(CustomPropTypes.datumValueTypes).isRequired,\n    /**\n     * Class attribute to be applied to the rectangle element\n     */\n    className: PropTypes.string,\n    /**\n     * Inline style object to be applied to the rectangle element\n     */\n    style: PropTypes.object,\n    /**\n     * `mousemove` event handler callback, called when user's mouse moves within the rectangle.\n     */\n    onMouseMove: PropTypes.func,\n    /**\n     * `mouseenter` event handler callback, called when user's mouse enters the rectangle.\n     */\n    onMouseEnter: PropTypes.func,\n    /**\n     * `mouseleave` event handler callback, called when user's mouse leaves the rectangle.\n     */\n    onMouseLeave: PropTypes.func\n  };\n  static defaultProps = {\n    className: \"\",\n    style: {}\n  };\n\n  render() {\n    const {\n      xScale,\n      yScale,\n      x,\n      xEnd,\n      y,\n      yEnd,\n      style,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      className\n    } = this.props;\n\n    invariant(\n      isValidScale(xScale),\n      `RangeRect.props.xScale is not a valid d3 scale`\n    );\n    invariant(\n      isValidScale(yScale),\n      `RangeRect.props.yScale is not a valid d3 scale`\n    );\n\n    const x0 = xScale(x);\n    const x1 = xScale(xEnd);\n    const y0 = yScale(y);\n    const y1 = yScale(yEnd);\n    const rectX = Math.min(x0, x1);\n    const rectY = Math.min(y0, y1);\n    const width = Math.abs(x1 - x0);\n    const height = Math.abs(y1 - y0);\n\n    return (\n      <rect\n        {...{\n          x: rectX,\n          y: rectY,\n          width,\n          height,\n          className,\n          style,\n          onMouseEnter,\n          onMouseMove,\n          onMouseLeave\n        }}\n      />\n    );\n  }\n}\n"],"file":"RangeRect.js"}