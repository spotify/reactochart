{"version":3,"sources":["src/FunnelChart.js"],"names":["CustomPropTypes","FunnelChart","nextProps","nextState","shouldUpdate","props","data","xScale","yScale","x","y","horizontal","funnelArea","x0","d","i","x1","y0","y1","colors","domain","range","map","pathStr","fill","stroke","xScaleType","yScaleType","xAccessor","yAccessor","xDataType","yDataType","xDomain","yDomain","Component","propTypes","array","isRequired","valueOrAccessor","bool","func","defaultProps"],"mappings":"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","file":"FunnelChart.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { area, scaleOrdinal, schemeCategory20b } from \"d3\";\nimport invariant from \"invariant\";\nimport PropTypes from \"prop-types\";\nimport * as CustomPropTypes from \"./utils/CustomPropTypes\";\nimport {\n  makeAccessor2,\n  getValue,\n  domainFromData,\n  combineDomains\n} from \"./utils/Data\";\nimport { dataTypeFromScaleType } from \"./utils/Scale\";\nimport xyPropsEqual from \"./utils/xyPropsEqual\";\n\nexport default class FunnelChart extends React.Component {\n  static propTypes = {\n    // data array\n    data: PropTypes.array.isRequired,\n    // data getters\n    x: CustomPropTypes.valueOrAccessor,\n    y: CustomPropTypes.valueOrAccessor,\n    horizontal: PropTypes.bool,\n    /**\n     * D3 scale for X axis - provided by XYPlot\n     */\n    xScale: PropTypes.func,\n    /**\n     * D3 scale for Y axis - provided by XYPlot\n     */\n    yScale: PropTypes.func\n  };\n  static defaultProps = {};\n\n  static getDomain(props) {\n    const { data, xScaleType, yScaleType, x, y, horizontal } = props;\n    const [xAccessor, yAccessor] = [makeAccessor2(x), makeAccessor2(y)];\n    const [xDataType, yDataType] = [\n      dataTypeFromScaleType(xScaleType),\n      dataTypeFromScaleType(yScaleType)\n    ];\n\n    return horizontal\n      ? {\n          xDomain: combineDomains([\n            domainFromData(data, xAccessor, xDataType),\n            domainFromData(data, (d, i) => -xAccessor(d, i), xDataType)\n          ]),\n          yDomain: domainFromData(data, yAccessor, yDataType)\n        }\n      : {\n          xDomain: domainFromData(data, xAccessor, xDataType),\n          yDomain: combineDomains([\n            domainFromData(data, yAccessor, yDataType),\n            domainFromData(data, (d, i) => -yAccessor(d, i), yDataType)\n          ])\n        };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const shouldUpdate = !xyPropsEqual(this.props, nextProps, []);\n    return shouldUpdate;\n  }\n\n  render() {\n    const { data, xScale, yScale, x, y, horizontal } = this.props;\n\n    const funnelArea = area();\n    if (horizontal) {\n      funnelArea\n        .x0((d, i) => xScale(-getValue(x, d, i)))\n        .x1((d, i) => xScale(getValue(x, d, i)))\n        .y((d, i) => yScale(getValue(y, d, i)));\n    } else {\n      funnelArea\n        .x((d, i) => xScale(getValue(x, d, i)))\n        .y0((d, i) => yScale(-getValue(y, d, i)))\n        .y1((d, i) => yScale(getValue(y, d, i)));\n    }\n\n    const colors = scaleOrdinal(schemeCategory20b).domain(_.range(10));\n\n    return (\n      <g className=\"funnel-chart\">\n        {data.map((d, i) => {\n          if (i === 0) return null;\n          const pathStr = funnelArea([data[i - 1], d]);\n\n          return (\n            <path\n              d={pathStr}\n              style={{ fill: colors(i - 1), stroke: \"transparent\" }}\n            />\n          );\n        })}\n      </g>\n    );\n  }\n}\n"]}