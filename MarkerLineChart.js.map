{"version":3,"sources":["src/MarkerLineChart.js"],"names":["getTickType","props","xEnd","yEnd","horizontal","_","isUndefined","console","warn","MarkerLineChart","React","Component","e","d","onMouseEnterLine","onMouseMoveLine","onMouseLeaveLine","i","onMouseEnter","onMouseMove","onMouseLeave","map","eventName","callback","isFunction","partial","x","y","xScale","yScale","lineClassName","lineStyle","xVal","yVal","xEndVal","yEndVal","x1","y1","x2","y2","key","every","isFinite","lineLength","getSpacing","tickType","spacingTop","spacingRight","spacingBottom","spacingLeft","data","xDomain","yDomain","P","markDomain","markScale","markAccessor","markDataDomain","domainHead","domainTail","first","last","sortBy","dataDomainHead","dataDomainTail","spacingTail","spacingHead","clamp","getDomain","xScaleType","yScaleType","rangeAxis","rangeStartAccessor","rangeEndAccessor","rangeDataType","shouldComponentUpdate","nextProps","shouldUpdate","render","renderRangeValueLine","renderValueValueLine","PropTypes","array","isRequired","CustomPropTypes","valueOrAccessor","bool","number","string","func","oneOfType","object"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAMA;;AACA;;;;;;;;;;AAEA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,MAA6BH,KAAnC,CAD0B,CAE1B;;AACA,MACG,CAACG,UAAD,IAAe,CAACC,gBAAEC,WAAF,CAAcH,IAAd,CAAjB,IACCC,UAAU,IAAI,CAACC,gBAAEC,WAAF,CAAcJ,IAAd,CAFlB,EAIEK,OAAO,CAACC,IAAR,CACE,yGADF;AAIF,MACG,CAACJ,UAAD,IAAe,CAACC,gBAAEC,WAAF,CAAcJ,IAAd,CAAjB,IACCE,UAAU,IAAI,CAACC,gBAAEC,WAAF,CAAcH,IAAd,CAFlB,EAIE,OAAO,YAAP;AAEF,SAAO,YAAP;AACD;AAED;;;;;;;;;AAQe,MAAMM,eAAN,SAA8BC,eAAMC,SAApC,CAA8C;AAAA;AAAA;;AAAA,8CAiMxC,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC3B,WAAKZ,KAAL,CAAWa,gBAAX,CAA4BF,CAA5B,EAA+BC,CAA/B;AACD,KAnM0D;;AAAA,6CAoMzC,CAACD,CAAD,EAAIC,CAAJ,KAAU;AAC1B,WAAKZ,KAAL,CAAWc,eAAX,CAA2BH,CAA3B,EAA8BC,CAA9B;AACD,KAtM0D;;AAAA,8CAuMxC,CAACD,CAAD,EAAIC,CAAJ,KAAU;AAC3B,WAAKZ,KAAL,CAAWe,gBAAX,CAA4BJ,CAA5B,EAA+BC,CAA/B;AACD,KAzM0D;;AAAA,kDA2MpC,CAACA,CAAD,EAAII,CAAJ,KAAU;AAC/B,YAAM,CAACC,YAAD,EAAeC,WAAf,EAA4BC,YAA5B,IAA4C,CAChD,kBADgD,EAEhD,iBAFgD,EAGhD,kBAHgD,EAIhDC,GAJgD,CAI5CC,SAAS,IAAI;AACjB;AACA,cAAMC,QAAQ,GAAG,4BAAiBD,SAAjB,EAA4B,KAAKrB,KAAjC,EAAwC,IAAxC,CAAjB;AACA,eAAOI,gBAAEmB,UAAF,CAAaD,QAAb,IAAyBlB,gBAAEoB,OAAF,CAAUF,QAAV,EAAoBlB,eAApB,EAAuBQ,CAAvB,CAAzB,GAAqD,IAA5D;AACD,OARiD,CAAlD;AAUA,YAAM;AACJa,QAAAA,CADI;AAEJxB,QAAAA,IAFI;AAGJyB,QAAAA,CAHI;AAIJxB,QAAAA,IAJI;AAKJC,QAAAA,UALI;AAMJwB,QAAAA,MANI;AAOJC,QAAAA,MAPI;AAQJC,QAAAA,aARI;AASJC,QAAAA;AATI,UAUF,KAAK9B,KAVT;AAWA,YAAM+B,IAAI,GAAGJ,MAAM,CAAC,yBAAcF,CAAd,EAAiBb,CAAjB,CAAD,CAAnB;AACA,YAAMoB,IAAI,GAAGJ,MAAM,CAAC,yBAAcF,CAAd,EAAiBd,CAAjB,CAAD,CAAnB;AACA,YAAMqB,OAAO,GAAG7B,gBAAEC,WAAF,CAAcJ,IAAd,IAAsB,CAAtB,GAA0B0B,MAAM,CAAC,yBAAc1B,IAAd,EAAoBW,CAApB,CAAD,CAAhD;AACA,YAAMsB,OAAO,GAAG9B,gBAAEC,WAAF,CAAcH,IAAd,IAAsB,CAAtB,GAA0B0B,MAAM,CAAC,yBAAc1B,IAAd,EAAoBU,CAApB,CAAD,CAAhD;AACA,YAAM,CAACuB,EAAD,EAAKC,EAAL,IAAW,CAACL,IAAD,EAAOC,IAAP,CAAjB;AACA,YAAMK,EAAE,GAAGlC,UAAU,GAAG4B,IAAH,GAAUE,OAA/B;AACA,YAAMK,EAAE,GAAGnC,UAAU,GAAG+B,OAAH,GAAaF,IAAlC;AACA,YAAMO,GAAG,yBAAkBvB,CAAlB,CAAT;AAEA,UAAI,CAACZ,gBAAEoC,KAAF,CAAQ,CAACL,EAAD,EAAKE,EAAL,EAASD,EAAT,EAAaE,EAAb,CAAR,EAA0BlC,gBAAEqC,QAA5B,CAAL,EAA4C,OAAO,IAAP;AAC5C,aACE;AACE,QAAA,SAAS,YAAK,oBAASZ,aAAT,EAAwBjB,CAAxB,EAA2BI,CAA3B,CAAL,CADX;AAEE,QAAA,KAAK,EAAE,oBAASc,SAAT,EAAoBlB,CAApB,EAAuBI,CAAvB;AAFT,SAGM;AAAEmB,QAAAA,EAAF;AAAME,QAAAA,EAAN;AAAUD,QAAAA,EAAV;AAAcE,QAAAA,EAAd;AAAkBC,QAAAA,GAAlB;AAAuBtB,QAAAA,YAAvB;AAAqCC,QAAAA,WAArC;AAAkDC,QAAAA;AAAlD,OAHN,EADF;AAOD,KAlP0D;;AAAA,kDAoPpC,CAACP,CAAD,EAAII,CAAJ,KAAU;AAC/B,YAAM,CAACC,YAAD,EAAeC,WAAf,EAA4BC,YAA5B,IAA4C,CAChD,kBADgD,EAEhD,iBAFgD,EAGhD,kBAHgD,EAIhDC,GAJgD,CAI5CC,SAAS,IAAI;AACjB;AACA,cAAMC,QAAQ,GAAG,4BAAiBD,SAAjB,EAA4B,KAAKrB,KAAjC,EAAwC,IAAxC,CAAjB;AACA,eAAOI,gBAAEmB,UAAF,CAAaD,QAAb,IAAyBlB,gBAAEoB,OAAF,CAAUF,QAAV,EAAoBlB,eAApB,EAAuBQ,CAAvB,CAAzB,GAAqD,IAA5D;AACD,OARiD,CAAlD;AAUA,YAAM;AACJa,QAAAA,CADI;AAEJC,QAAAA,CAFI;AAGJvB,QAAAA,UAHI;AAIJuC,QAAAA,UAJI;AAKJf,QAAAA,MALI;AAMJC,QAAAA,MANI;AAOJC,QAAAA,aAPI;AAQJC,QAAAA;AARI,UASF,KAAK9B,KATT;AAUA,YAAM+B,IAAI,GAAGJ,MAAM,CAAC,yBAAcF,CAAd,EAAiBb,CAAjB,CAAD,CAAnB;AACA,YAAMoB,IAAI,GAAGJ,MAAM,CAAC,yBAAcF,CAAd,EAAiBd,CAAjB,CAAD,CAAnB;AACA,YAAMuB,EAAE,GAAG,CAAChC,UAAD,GAAc4B,IAAI,GAAGW,UAAU,GAAG,CAAlC,GAAsCX,IAAjD;AACA,YAAMM,EAAE,GAAG,CAAClC,UAAD,GAAc4B,IAAI,GAAGW,UAAU,GAAG,CAAlC,GAAsCX,IAAjD;AACA,YAAMK,EAAE,GAAG,CAACjC,UAAD,GAAc6B,IAAd,GAAqBA,IAAI,GAAGU,UAAU,GAAG,CAApD;AACA,YAAMJ,EAAE,GAAG,CAACnC,UAAD,GAAc6B,IAAd,GAAqBA,IAAI,GAAGU,UAAU,GAAG,CAApD;AACA,YAAMH,GAAG,yBAAkBvB,CAAlB,CAAT;AAEA,UAAI,CAACZ,gBAAEoC,KAAF,CAAQ,CAACL,EAAD,EAAKE,EAAL,EAASD,EAAT,EAAaE,EAAb,CAAR,EAA0BlC,gBAAEqC,QAA5B,CAAL,EAA4C,OAAO,IAAP;AAC5C,aACE;AACE,QAAA,SAAS,YAAK,oBAASZ,aAAT,EAAwBjB,CAAxB,EAA2BI,CAA3B,CAAL,CADX;AAEE,QAAA,KAAK,EAAE,oBAASc,SAAT,EAAoBlB,CAApB,EAAuBI,CAAvB;AAFT,SAGM;AAAEmB,QAAAA,EAAF;AAAME,QAAAA,EAAN;AAAUD,QAAAA,EAAV;AAAcE,QAAAA,EAAd;AAAkBC,QAAAA,GAAlB;AAAuBtB,QAAAA,YAAvB;AAAqCC,QAAAA,WAArC;AAAkDC,QAAAA;AAAlD,OAHN,EADF;AAOD,KAzR0D;AAAA;;AAkF3D,SAAOwB,UAAP,CAAkB3C,KAAlB,EAAyB;AACvB,UAAM4C,QAAQ,GAAG7C,WAAW,CAACC,KAAD,CAA5B,CADuB,CAEvB;;AACA,QAAI4C,QAAQ,KAAK,YAAjB,EACE,OAAO;AACLC,MAAAA,UAAU,EAAE,CADP;AAELC,MAAAA,YAAY,EAAE,CAFT;AAGLC,MAAAA,aAAa,EAAE,CAHV;AAILC,MAAAA,WAAW,EAAE;AAJR,KAAP;AAOF,UAAM;AACJN,MAAAA,UADI;AAEJvC,MAAAA,UAFI;AAGJ8C,MAAAA,IAHI;AAIJC,MAAAA,OAJI;AAKJC,MAAAA,OALI;AAMJxB,MAAAA,MANI;AAOJC,MAAAA,MAPI;AAQJH,MAAAA,CARI;AASJC,MAAAA;AATI,QAUF1B,KAVJ;AAWA,UAAMoD,CAAC,GAAGV,UAAU,GAAG,CAAvB,CAtBuB,CAsBG;;AAC1B,UAAMW,UAAU,GAAGlD,UAAU,GAAGgD,OAAH,GAAaD,OAA1C;AACA,UAAMI,SAAS,GAAGnD,UAAU,GAAGyB,MAAH,GAAYD,MAAxC;AACA,UAAM4B,YAAY,GAAGpD,UAAU,GAAG,yBAAcuB,CAAd,CAAH,GAAsB,yBAAcD,CAAd,CAArD;AACA,UAAM+B,cAAc,GAAG,0BAAeP,IAAf,EAAqBM,YAArB,CAAvB,CA1BuB,CA4BvB;AACA;;AACA,UAAM,CAACE,UAAD,EAAaC,UAAb,IAA2B,qBAAE,CACjCtD,gBAAEuD,KAAF,CAAQN,UAAR,CADiC,EAEjCjD,gBAAEwD,IAAF,CAAOP,UAAP,CAFiC,CAAF,EAI9BjC,GAJ8B,CAI1BkC,SAJ0B,EAK9BO,MAL8B,EAAjC,CA9BuB,CAmCV;AACb;;AACA,UAAM,CAACC,cAAD,EAAiBC,cAAjB,IAAmC,qBAAE,CACzC3D,gBAAEuD,KAAF,CAAQH,cAAR,CADyC,EAEzCpD,gBAAEwD,IAAF,CAAOJ,cAAP,CAFyC,CAAF,EAItCpC,GAJsC,CAIlCkC,SAJkC,EAKtCO,MALsC,EAAzC,CArCuB,CA0CV;AACb;;AACA,UAAM,CAACG,WAAD,EAAcC,WAAd,IAA6B,CACjC7D,gBAAE8D,KAAF,CAAQd,CAAC,IAAIM,UAAU,GAAGK,cAAjB,CAAT,EAA2C,CAA3C,EAA8CX,CAA9C,CADiC,EAEjChD,gBAAE8D,KAAF,CAAQd,CAAC,IAAIU,cAAc,GAAGL,UAArB,CAAT,EAA2C,CAA3C,EAA8CL,CAA9C,CAFiC,CAAnC;;AAKA,QAAIjD,UAAJ,EAAgB;AACd,aAAO;AACL0C,QAAAA,UAAU,EAAEoB,WADP;AAELlB,QAAAA,aAAa,EAAEiB,WAFV;AAGLhB,QAAAA,WAAW,EAAE,CAHR;AAILF,QAAAA,YAAY,EAAE;AAJT,OAAP;AAMD,KAPD,MAOO;AACL,aAAO;AACLD,QAAAA,UAAU,EAAE,CADP;AAELE,QAAAA,aAAa,EAAE,CAFV;AAGLC,QAAAA,WAAW,EAAEiB,WAHR;AAILnB,QAAAA,YAAY,EAAEkB;AAJT,OAAP;AAMD;AACF;;AAED,SAAOG,SAAP,CAAiBnE,KAAjB,EAAwB;AACtB,QAAID,WAAW,CAACC,KAAD,CAAX,KAAuB,YAA3B,EAAyC;AACvC;AACA,YAAM;AACJiD,QAAAA,IADI;AAEJxB,QAAAA,CAFI;AAGJxB,QAAAA,IAHI;AAIJyB,QAAAA,CAJI;AAKJxB,QAAAA,IALI;AAMJkE,QAAAA,UANI;AAOJC,QAAAA,UAPI;AAQJlE,QAAAA;AARI,UASFH,KATJ,CAFuC,CAavC;AACA;;AACA,YAAMsE,SAAS,GAAGnE,UAAU,GAAG,GAAH,GAAS,GAArC;AACA,YAAMoE,kBAAkB,GAAGpE,UAAU,GACjC,yBAAcuB,CAAd,CADiC,GAEjC,yBAAcD,CAAd,CAFJ;AAGA,YAAM+C,gBAAgB,GAAGrE,UAAU,GAC/B,yBAAcD,IAAd,CAD+B,GAE/B,yBAAcD,IAAd,CAFJ;AAGA,YAAMwE,aAAa,GAAG,kCACpBtE,UAAU,GAAGkE,UAAH,GAAgBD,UADN,CAAtB;AAIA,aAAO;AACL,mBAAIE,SAAJ,cAAwB,+BACtBrB,IADsB,EAEtBsB,kBAFsB,EAGtBC,gBAHsB,EAItBC,aAJsB;AADnB,OAAP;AAQD,KAlCD,MAkCO;AACL,aAAO,EAAP;AACD;AACF;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC/B,UAAMC,YAAY,GAAG,CAAC,2BAAa,KAAK5E,KAAlB,EAAyB2E,SAAzB,EAAoC,EAApC,CAAtB;AACA,WAAOC,YAAP;AACD;;AA4FDC,EAAAA,MAAM,GAAG;AACP,UAAMjC,QAAQ,GAAG7C,WAAW,CAAC,KAAKC,KAAN,CAA5B;AACA,WACE;AAAG,MAAA,SAAS,EAAC;AAAb,OACG4C,QAAQ,KAAK,YAAb,GACG,KAAK5C,KAAL,CAAWiD,IAAX,CAAgB7B,GAAhB,CAAoB,KAAK0D,oBAAzB,CADH,GAEG,KAAK9E,KAAL,CAAWiD,IAAX,CAAgB7B,GAAhB,CAAoB,KAAK2D,oBAAzB,CAHN,CADF;AAOD;;AApS0D;;;;gBAAxCvE,e,eACA;AACjB;;;AAGAyC,EAAAA,IAAI,EAAE+B,mBAAUC,KAAV,CAAgBC,UAJL;;AAKjB;;;;;AAKAzD,EAAAA,CAAC,EAAE0D,eAAe,CAACC,eAVF;;AAWjB;;;;;AAKA1D,EAAAA,CAAC,EAAEyD,eAAe,CAACC,eAhBF;;AAiBjB;;;;;AAKAnF,EAAAA,IAAI,EAAEkF,eAAe,CAACC,eAtBL;;AAuBjB;;;;;AAKAlF,EAAAA,IAAI,EAAEiF,eAAe,CAACC,eA5BL;;AA6BjB;;;;AAIAjF,EAAAA,UAAU,EAAE6E,mBAAUK,IAjCL;AAkCjB3C,EAAAA,UAAU,EAAEsC,mBAAUM,MAlCL;;AAmCjB;;;AAGAlB,EAAAA,UAAU,EAAEY,mBAAUO,MAtCL;;AAuCjB;;;AAGAlB,EAAAA,UAAU,EAAEW,mBAAUO,MA1CL;;AA2CjB;;;AAGA5D,EAAAA,MAAM,EAAEqD,mBAAUQ,IA9CD;;AA+CjB;;;AAGA5D,EAAAA,MAAM,EAAEoD,mBAAUQ,IAlDD;;AAmDjB;;;;AAIA3D,EAAAA,aAAa,EAAEmD,mBAAUS,SAAV,CAAoB,CAACT,mBAAUO,MAAX,EAAmBP,mBAAUQ,IAA7B,CAApB,CAvDE;;AAwDjB;;;;AAIA1D,EAAAA,SAAS,EAAEkD,mBAAUS,SAAV,CAAoB,CAACT,mBAAUU,MAAX,EAAmBV,mBAAUQ,IAA7B,CAApB,CA5DM;;AA6DjB;;;AAGA3E,EAAAA,gBAAgB,EAAEmE,mBAAUQ,IAhEX;;AAiEjB;;;AAGA1E,EAAAA,eAAe,EAAEkE,mBAAUQ,IApEV;;AAqEjB;;;AAGAzE,EAAAA,gBAAgB,EAAEiE,mBAAUQ;AAxEX,C;;gBADAhF,e,kBA2EG;AACpBL,EAAAA,UAAU,EAAE,KADQ;AAEpBuC,EAAAA,UAAU,EAAE,EAFQ;AAGpBb,EAAAA,aAAa,EAAE,EAHK;AAIpBC,EAAAA,SAAS,EAAE;AAJS,C","sourcesContent":["import _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { methodIfFuncProp } from \"./util.js\";\nimport * as CustomPropTypes from \"./utils/CustomPropTypes\";\nimport {\n  domainFromData,\n  domainFromRangeData,\n  getValue,\n  makeAccessor2\n} from \"./utils/Data\";\nimport { dataTypeFromScaleType } from \"./utils/Scale\";\nimport xyPropsEqual from \"./utils/xyPropsEqual\";\n\nfunction getTickType(props) {\n  const { xEnd, yEnd, horizontal } = props;\n  // warn if a range is passed for the dependent variable, which is expected to be a value\n  if (\n    (!horizontal && !_.isUndefined(yEnd)) ||\n    (horizontal && !_.isUndefined(xEnd))\n  )\n    console.warn(\n      \"Warning: MarkerLineChart can only show the independent variable as a range, not the dependent variable.\"\n    );\n\n  if (\n    (!horizontal && !_.isUndefined(xEnd)) ||\n    (horizontal && !_.isUndefined(yEnd))\n  )\n    return \"RangeValue\";\n\n  return \"ValueValue\";\n}\n\n/**\n * `MarkerLineChart` is similar to a bar chart,\n * except that it just draws a line at the data value, rather than a full bar.\n * If the independent variable is a range, the length of the line will represent that range,\n * otherwise all lines will be the same length.\n * The dependent variable must be a single value, not a range.\n */\n\nexport default class MarkerLineChart extends React.Component {\n  static propTypes = {\n    /**\n     * Array of data objects. One marker line will be rendered per datum in the array.\n     */\n    data: PropTypes.array.isRequired,\n    /**\n     * Accessor function for marker line's X values, called once per line (datum), or a single value to be used for all marker lines.\n     * If `horizontal` is `false`, this gets the *independent* variable value on which the line is centered.\n     * If `horizontal` is `true`, this gets the start (minimum value) of the *dependent* variable.\n     */\n    x: CustomPropTypes.valueOrAccessor,\n    /**\n     * Accessor function for marker line's Y values, called once per line (datum), or a single value to be used for all marker lines.\n     * If `horizontal` is `false`, this gets the start (minimum value) of the *dependent* variable.\n     * If `horizontal` is `true`, this gets the *independent* variable value on which the line is centered.\n     */\n    y: CustomPropTypes.valueOrAccessor,\n    /**\n     * Accessor function for the end (maximum X-values) of the *dependent* variable, which is where the marker line is rendered,\n     * or a single value to be used for all marker lines.\n     * Should only be passed when `horizontal` is `true` (ignored otherwise).\n     */\n    xEnd: CustomPropTypes.valueOrAccessor,\n    /**\n     * Accessor function for the end (maximum Y-values) of the *dependent* variable range which is where the marker line is rendered,\n     * or a single value to be used for all marker lines.\n     * Should only be passed when `horizontal` is `false` (ignored otherwise).\n     */\n    yEnd: CustomPropTypes.valueOrAccessor,\n    /**\n     * Boolean which determines whether the chart will be horizontal.\n     * When `true` the X-axis will be treated as the dependent axis.\n     */\n    horizontal: PropTypes.bool,\n    lineLength: PropTypes.number,\n    /**\n     * D3 scale type for X axis - provided by XYPlot.\n     */\n    xScaleType: PropTypes.string,\n    /**\n     * D3 scale type for Y axis - provided by XYPlot.\n     */\n    yScaleType: PropTypes.string,\n    /**\n     * D3 scale for X axis - provided by XYPlot.\n     */\n    xScale: PropTypes.func,\n    /**\n     * D3 scale for Y axis - provided by XYPlot.\n     */\n    yScale: PropTypes.func,\n    /**\n     * Class attribute to be applied to the line path,\n     * or accessor function which returns a class.\n     */\n    lineClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    /**\n     * Inline style object to be applied to each marker line,\n     * or accessor function which returns a style object.\n     */\n    lineStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    /**\n     * `mouseenter` event handler callback, called when user's mouse enters a marker line.\n     */\n    onMouseEnterLine: PropTypes.func,\n    /**\n     * `mousemove` event handler callback, called when user's mouse moves within a marker line.\n     */\n    onMouseMoveLine: PropTypes.func,\n    /**\n     * `mouseleave` event handler callback, called when user's mouse leaves a marker line.\n     */\n    onMouseLeaveLine: PropTypes.func\n  };\n  static defaultProps = {\n    horizontal: false,\n    lineLength: 10,\n    lineClassName: \"\",\n    lineStyle: {}\n  };\n\n  static getSpacing(props) {\n    const tickType = getTickType(props);\n    //no spacing for rangeValue marker charts since line start and end are set explicitly\n    if (tickType === \"RangeValue\")\n      return {\n        spacingTop: 0,\n        spacingRight: 0,\n        spacingBottom: 0,\n        spacingLeft: 0\n      };\n\n    const {\n      lineLength,\n      horizontal,\n      data,\n      xDomain,\n      yDomain,\n      xScale,\n      yScale,\n      x,\n      y\n    } = props;\n    const P = lineLength / 2; //padding\n    const markDomain = horizontal ? yDomain : xDomain;\n    const markScale = horizontal ? yScale : xScale;\n    const markAccessor = horizontal ? makeAccessor2(y) : makeAccessor2(x);\n    const markDataDomain = domainFromData(data, markAccessor);\n\n    // todo refactor/add better comments to clarify\n    // find the edges of the tick domain, and map them through the scale function\n    const [domainHead, domainTail] = _([\n      _.first(markDomain),\n      _.last(markDomain)\n    ])\n      .map(markScale)\n      .sortBy(); //sort the pixel values return by the domain extents\n    // find the edges of the data domain, and map them through the scale function\n    const [dataDomainHead, dataDomainTail] = _([\n      _.first(markDataDomain),\n      _.last(markDataDomain)\n    ])\n      .map(markScale)\n      .sortBy(); //sort the pixel values return by the domain extents\n    // find the necessary spacing (based on bar width) to push the bars completely inside the tick domain\n    const [spacingTail, spacingHead] = [\n      _.clamp(P - (domainTail - dataDomainTail), 0, P),\n      _.clamp(P - (dataDomainHead - domainHead), 0, P)\n    ];\n\n    if (horizontal) {\n      return {\n        spacingTop: spacingHead,\n        spacingBottom: spacingTail,\n        spacingLeft: 0,\n        spacingRight: 0\n      };\n    } else {\n      return {\n        spacingTop: 0,\n        spacingBottom: 0,\n        spacingLeft: spacingHead,\n        spacingRight: spacingTail\n      };\n    }\n  }\n\n  static getDomain(props) {\n    if (getTickType(props) === \"RangeValue\") {\n      // set range domain for range type\n      const {\n        data,\n        x,\n        xEnd,\n        y,\n        yEnd,\n        xScaleType,\n        yScaleType,\n        horizontal\n      } = props;\n\n      // only have to specify range axis domain, other axis uses default domainFromData\n      // in this chart type, the range axis, if there is one, is always the *independent* variable\n      const rangeAxis = horizontal ? \"y\" : \"x\";\n      const rangeStartAccessor = horizontal\n        ? makeAccessor2(y)\n        : makeAccessor2(x);\n      const rangeEndAccessor = horizontal\n        ? makeAccessor2(yEnd)\n        : makeAccessor2(xEnd);\n      const rangeDataType = dataTypeFromScaleType(\n        horizontal ? yScaleType : xScaleType\n      );\n\n      return {\n        [`${rangeAxis}Domain`]: domainFromRangeData(\n          data,\n          rangeStartAccessor,\n          rangeEndAccessor,\n          rangeDataType\n        )\n      };\n    } else {\n      return {};\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const shouldUpdate = !xyPropsEqual(this.props, nextProps, []);\n    return shouldUpdate;\n  }\n\n  onMouseEnterLine = (e, d) => {\n    this.props.onMouseEnterLine(e, d);\n  };\n  onMouseMoveLine = (e, d) => {\n    this.props.onMouseMoveLine(e, d);\n  };\n  onMouseLeaveLine = (e, d) => {\n    this.props.onMouseLeaveLine(e, d);\n  };\n\n  renderRangeValueLine = (d, i) => {\n    const [onMouseEnter, onMouseMove, onMouseLeave] = [\n      \"onMouseEnterLine\",\n      \"onMouseMoveLine\",\n      \"onMouseLeaveLine\"\n    ].map(eventName => {\n      // partially apply this bar's data point as 2nd callback argument\n      const callback = methodIfFuncProp(eventName, this.props, this);\n      return _.isFunction(callback) ? _.partial(callback, _, d) : null;\n    });\n\n    const {\n      x,\n      xEnd,\n      y,\n      yEnd,\n      horizontal,\n      xScale,\n      yScale,\n      lineClassName,\n      lineStyle\n    } = this.props;\n    const xVal = xScale(makeAccessor2(x)(d));\n    const yVal = yScale(makeAccessor2(y)(d));\n    const xEndVal = _.isUndefined(xEnd) ? 0 : xScale(makeAccessor2(xEnd)(d));\n    const yEndVal = _.isUndefined(yEnd) ? 0 : yScale(makeAccessor2(yEnd)(d));\n    const [x1, y1] = [xVal, yVal];\n    const x2 = horizontal ? xVal : xEndVal;\n    const y2 = horizontal ? yEndVal : yVal;\n    const key = `marker-line-${i}`;\n\n    if (!_.every([x1, x2, y1, y2], _.isFinite)) return null;\n    return (\n      <line\n        className={`${getValue(lineClassName, d, i)}`}\n        style={getValue(lineStyle, d, i)}\n        {...{ x1, x2, y1, y2, key, onMouseEnter, onMouseMove, onMouseLeave }}\n      />\n    );\n  };\n\n  renderValueValueLine = (d, i) => {\n    const [onMouseEnter, onMouseMove, onMouseLeave] = [\n      \"onMouseEnterLine\",\n      \"onMouseMoveLine\",\n      \"onMouseLeaveLine\"\n    ].map(eventName => {\n      // partially apply this bar's data point as 2nd callback argument\n      const callback = methodIfFuncProp(eventName, this.props, this);\n      return _.isFunction(callback) ? _.partial(callback, _, d) : null;\n    });\n\n    const {\n      x,\n      y,\n      horizontal,\n      lineLength,\n      xScale,\n      yScale,\n      lineClassName,\n      lineStyle\n    } = this.props;\n    const xVal = xScale(makeAccessor2(x)(d));\n    const yVal = yScale(makeAccessor2(y)(d));\n    const x1 = !horizontal ? xVal - lineLength / 2 : xVal;\n    const x2 = !horizontal ? xVal + lineLength / 2 : xVal;\n    const y1 = !horizontal ? yVal : yVal - lineLength / 2;\n    const y2 = !horizontal ? yVal : yVal + lineLength / 2;\n    const key = `marker-line-${i}`;\n\n    if (!_.every([x1, x2, y1, y2], _.isFinite)) return null;\n    return (\n      <line\n        className={`${getValue(lineClassName, d, i)}`}\n        style={getValue(lineStyle, d, i)}\n        {...{ x1, x2, y1, y2, key, onMouseEnter, onMouseMove, onMouseLeave }}\n      />\n    );\n  };\n\n  render() {\n    const tickType = getTickType(this.props);\n    return (\n      <g className=\"rct-marker-line-chart\">\n        {tickType === \"RangeValue\"\n          ? this.props.data.map(this.renderRangeValueLine)\n          : this.props.data.map(this.renderValueValueLine)}\n      </g>\n    );\n  }\n}\n"],"file":"MarkerLineChart.js"}