{"version":3,"sources":["src/YLine.js"],"names":["YLine","React","Component","render","yScale","value","width","spacingLeft","spacingRight","style","props","className","lineY","x1","x2","y1","y2","PropTypes","func","any","isRequired","number","object","string"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEA;;;AAGe,MAAMA,KAAN,SAAoBC,eAAMC,SAA1B,CAAoC;AA+BjDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,WAJI;AAKJC,MAAAA,YALI;AAMJC,MAAAA;AANI,QAOF,KAAKC,KAPT;AAQA,UAAMC,SAAS,8BAAuB,KAAKD,KAAL,CAAWC,SAAX,IAAwB,EAA/C,CAAf;AACA,UAAMC,KAAK,GAAGR,MAAM,CAACC,KAAD,CAApB;AAEA,WACE,qCACM;AACFQ,MAAAA,EAAE,EAAE,CAACN,WADH;AAEFO,MAAAA,EAAE,EAAER,KAAK,GAAGE,YAFV;AAGFO,MAAAA,EAAE,EAAEH,KAHF;AAIFI,MAAAA,EAAE,EAAEJ,KAJF;AAKFD,MAAAA,SALE;AAMFF,MAAAA;AANE,KADN,CADF;AAYD;;AAvDgD;;;;gBAA9BT,K,eACA;AACjB;;;AAGAI,EAAAA,MAAM,EAAEa,mBAAUC,IAJD;AAKjBb,EAAAA,KAAK,EAAEY,mBAAUE,GAAV,CAAcC,UALJ;;AAMjB;;;AAGAb,EAAAA,WAAW,EAAEU,mBAAUI,MATN;;AAUjB;;;AAGAb,EAAAA,YAAY,EAAES,mBAAUI,MAbP;;AAcjB;;;AAGAZ,EAAAA,KAAK,EAAEQ,mBAAUK,MAjBA;;AAkBjB;;;AAGAX,EAAAA,SAAS,EAAEM,mBAAUM;AArBJ,C;;gBADAvB,K,kBAwBG;AACpBS,EAAAA,KAAK,EAAE,EADa;AAEpBE,EAAAA,SAAS,EAAE,EAFS;AAGpBJ,EAAAA,WAAW,EAAE,CAHO;AAIpBC,EAAAA,YAAY,EAAE;AAJM,C","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\n/**\n * `YLine` is a horizontal line rendered on the y axis\n */\nexport default class YLine extends React.Component {\n  static propTypes = {\n    /**\n     * D3 scale for Y axis - provided by XYPlot\n     */\n    yScale: PropTypes.func,\n    value: PropTypes.any.isRequired,\n    /**\n     * Spacing left - provided by XYPlot\n     */\n    spacingLeft: PropTypes.number,\n    /**\n     * Spacing right - provided by XYPlot\n     */\n    spacingRight: PropTypes.number,\n    /**\n     * Inline style object to be applied to the line\n     */\n    style: PropTypes.object,\n    /**\n     * Class attribute to be applied to the line\n     */\n    className: PropTypes.string\n  };\n  static defaultProps = {\n    style: {},\n    className: \"\",\n    spacingLeft: 0,\n    spacingRight: 0\n  };\n\n  render() {\n    const {\n      yScale,\n      value,\n      width,\n      spacingLeft,\n      spacingRight,\n      style\n    } = this.props;\n    const className = `rct-chart-line-y ${this.props.className || \"\"}`;\n    const lineY = yScale(value);\n\n    return (\n      <line\n        {...{\n          x1: -spacingLeft,\n          x2: width + spacingRight,\n          y1: lineY,\n          y2: lineY,\n          className,\n          style\n        }}\n      />\n    );\n  }\n}\n"],"file":"YLine.js"}