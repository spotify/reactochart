{"version":3,"sources":["src/XLine.js"],"names":["XLine","React","Component","render","xScale","value","height","style","spacingTop","spacingBottom","props","className","lineX","x1","x2","y1","y2","PropTypes","func","any","isRequired","number","object","string"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEA;;;AAGe,MAAMA,KAAN,SAAoBC,eAAMC,SAA1B,CAAoC;AA+BjDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,MAHI;AAIJC,MAAAA,KAJI;AAKJC,MAAAA,UALI;AAMJC,MAAAA;AANI,QAOF,KAAKC,KAPT;AAQA,UAAMC,SAAS,8BAAuB,KAAKD,KAAL,CAAWC,SAAlC,CAAf;AACA,UAAMC,KAAK,GAAGR,MAAM,CAACC,KAAD,CAApB;AAEA,WACE,qCACM;AACFQ,MAAAA,EAAE,EAAED,KADF;AAEFE,MAAAA,EAAE,EAAEF,KAFF;AAGFG,MAAAA,EAAE,EAAE,CAACP,UAHH;AAIFQ,MAAAA,EAAE,EAAEV,MAAM,GAAGG,aAJX;AAKFE,MAAAA,SALE;AAMFJ,MAAAA;AANE,KADN,CADF;AAYD;;AAvDgD;;;;gBAA9BP,K,eACA;AACjB;;;AAGAI,EAAAA,MAAM,EAAEa,mBAAUC,IAJD;AAKjBb,EAAAA,KAAK,EAAEY,mBAAUE,GAAV,CAAcC,UALJ;;AAMjB;;;AAGAZ,EAAAA,UAAU,EAAES,mBAAUI,MATL;;AAUjB;;;AAGAZ,EAAAA,aAAa,EAAEQ,mBAAUI,MAbR;;AAcjB;;;AAGAd,EAAAA,KAAK,EAAEU,mBAAUK,MAjBA;;AAkBjB;;;AAGAX,EAAAA,SAAS,EAAEM,mBAAUM;AArBJ,C;;gBADAvB,K,kBAwBG;AACpBO,EAAAA,KAAK,EAAE,EADa;AAEpBI,EAAAA,SAAS,EAAE,EAFS;AAGpBH,EAAAA,UAAU,EAAE,CAHQ;AAIpBC,EAAAA,aAAa,EAAE;AAJK,C","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\n/**\n * `XLine` is a vertical line rendered on the x axis\n */\nexport default class XLine extends React.Component {\n  static propTypes = {\n    /**\n     * D3 scale for X axis - provided by XYPlot\n     */\n    xScale: PropTypes.func,\n    value: PropTypes.any.isRequired,\n    /**\n     * Spacing top - provided by XYPlot\n     */\n    spacingTop: PropTypes.number,\n    /**\n     * Spacing bottom - provided by XYPlot\n     */\n    spacingBottom: PropTypes.number,\n    /**\n     * Inline style object to be applied to the line\n     */\n    style: PropTypes.object,\n    /**\n     * Class attribute to be applied to the line\n     */\n    className: PropTypes.string\n  };\n  static defaultProps = {\n    style: {},\n    className: \"\",\n    spacingTop: 0,\n    spacingBottom: 0\n  };\n\n  render() {\n    const {\n      xScale,\n      value,\n      height,\n      style,\n      spacingTop,\n      spacingBottom\n    } = this.props;\n    const className = `rct-chart-line-x ${this.props.className}`;\n    const lineX = xScale(value);\n\n    return (\n      <line\n        {...{\n          x1: lineX,\n          x2: lineX,\n          y1: -spacingTop,\n          y2: height + spacingBottom,\n          className,\n          style\n        }}\n      />\n    );\n  }\n}\n"],"file":"XLine.js"}