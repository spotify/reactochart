{"version":3,"sources":["src/YTicks.js"],"names":["YTicks","React","Component","getTickDomain","props","yScale","_","defaults","defaultProps","yTickDomain","getMargin","tickLength","position","placement","zeroMargin","marginTop","marginBottom","marginLeft","marginRight","capitalize","render","width","tickCount","tickStyle","tickClassName","spacingLeft","spacingRight","ticks","className","transform","map","tick","i","y1","x2","x1","y2","style","key","PropTypes","func","oneOf","array","number","object","string","nice","bool"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { getScaleTicks, getTickDomain } from \"./utils/Scale\";\n\nexport default class YTicks extends React.Component {\n  static propTypes = {\n    /**\n     * D3 scale for Y axis - provided by XYPlot.\n     */\n    yScale: PropTypes.func,\n    /**\n     * Position of y ticks. Accepted options are \"left\" or \"right\".\n     */\n    position: PropTypes.oneOf([\"left\", \"right\"]),\n    /**\n     * Placement of ticks in regards to the y axis. Accepted options are \"before\" or \"after\".\n     */\n    placement: PropTypes.oneOf([\"before\", \"after\"]),\n    /**\n     * Custom ticks to display.\n     */\n    ticks: PropTypes.array,\n    /**\n     * Number of ticks on axis.\n     */\n    tickCount: PropTypes.number,\n    tickLength: PropTypes.number,\n    /**\n     * Inline style object to be applied to each tick.\n     */\n    tickStyle: PropTypes.object,\n    /**\n     * Class attribute to be applied to each tick.\n     */\n    tickClassName: PropTypes.string,\n    /**\n     * Spacing - provided by XYPlot and used to determine the placement of the ticks given spacingLeft.\n     */\n    spacingLeft: PropTypes.number,\n    /**\n     * Spacing - provided by XYPlot and used to determine the placement of the ticks given spacingRight.\n     */\n    spacingRight: PropTypes.number,\n    /**\n     * Round ticks to capture extent of given y domain from XYPlot.\n     */\n    nice: PropTypes.bool\n  };\n  static defaultProps = {\n    position: \"left\",\n    nice: true,\n    tickLength: 5,\n    tickStyle: {}\n  };\n\n  static getTickDomain(props) {\n    if (!props.yScale) return;\n    props = _.defaults({}, props, YTicks.defaultProps);\n    return { yTickDomain: getTickDomain(props.yScale, props) };\n  }\n\n  static getMargin(props) {\n    const { tickLength, position } = _.defaults({}, props, YTicks.defaultProps);\n    const placement =\n      props.placement || (position === \"left\" ? \"before\" : \"after\");\n    const zeroMargin = {\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: 0,\n      marginRight: 0\n    };\n\n    if (\n      (position === \"left\" && placement === \"after\") ||\n      (position === \"right\" && placement === \"before\")\n    )\n      return zeroMargin;\n\n    return _.defaults(\n      { [`margin${_.capitalize(position)}`]: tickLength || 0 },\n      zeroMargin\n    );\n  }\n\n  render() {\n    const {\n      width,\n      yScale,\n      tickCount,\n      position,\n      tickLength,\n      tickStyle,\n      tickClassName,\n      spacingLeft,\n      spacingRight\n    } = this.props;\n    const placement =\n      this.props.placement || (position === \"left\" ? \"before\" : \"after\");\n    const ticks = this.props.ticks || getScaleTicks(yScale, null, tickCount);\n    const className = `rct-chart-tick rct-chart-tick-y ${tickClassName || \"\"}`;\n    const transform =\n      position === \"right\"\n        ? `translate(${width + (spacingRight || 0)}, 0)`\n        : `translate(${-spacingLeft || 0}, 0)`;\n\n    return (\n      <g className=\"rct-chart-ticks-y\" transform={transform}>\n        {ticks.map((tick, i) => {\n          const y1 = yScale(tick);\n          const x2 = placement === \"before\" ? -tickLength : tickLength;\n\n          return (\n            <line\n              {...{\n                x1: 0,\n                x2,\n                y1,\n                y2: y1,\n                className,\n                style: tickStyle,\n                key: `tick-${i}`\n              }}\n            />\n          );\n        })}\n      </g>\n    );\n  }\n}\n"],"file":"YTicks.js"}