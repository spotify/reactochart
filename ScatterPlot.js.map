{"version":3,"sources":["src/ScatterPlot.js"],"names":["ScatterPlot","React","Component","e","d","props","onMouseEnterPoint","onMouseMovePoint","onMouseLeavePoint","i","onMouseEnter","onMouseMove","onMouseLeave","map","eventName","callback","_","isFunction","partial","xScale","yScale","x","y","pointRadius","pointOffset","pointStyle","pointClassName","pointSymbol","className","style","symbolProps","key","isString","isNumber","type","isUndefined","r","cx","cy","assign","textAnchor","dominantBaseline","cloneElement","shouldComponentUpdate","nextProps","nextState","shouldUpdate","render","data","renderPoint","PropTypes","array","isRequired","CustomPropTypes","valueOrAccessor","func","number","oneOfType","node","arrayOf","object","string"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { methodIfFuncProp } from \"./util.js\";\nimport * as CustomPropTypes from \"./utils/CustomPropTypes\";\nimport { getValue } from \"./utils/Data\";\nimport xyPropsEqual from \"./utils/xyPropsEqual\";\n\n/**\n * `ScatterPlot` displays its data as a collection of points. Each point represents\n * the relationship between two variables, one plotted along the x-axis and the other on the y-axis.\n */\nexport default class ScatterPlot extends React.Component {\n  static propTypes = {\n    /**\n     * Array of data to be plotted.\n     */\n    data: PropTypes.array.isRequired,\n    /**\n     * Accessor function for plot X values, called once per datum, or a single value to be used for all points.\n     */\n    x: CustomPropTypes.valueOrAccessor,\n    /**\n     * Accessor function for plot Y values, called once per datum, or a single value to be used for all points.\n     */\n    y: CustomPropTypes.valueOrAccessor,\n    /**\n     * D3 scale for X axis - provided by XYPlot.\n     */\n    xScale: PropTypes.func,\n    /**\n     * D3 scale for Y axis - provided by XYPlot.\n     */\n    yScale: PropTypes.func,\n    /**\n     * Used with the default point symbol (circle), defines the circle radius.\n     */\n    pointRadius: PropTypes.number,\n    /**\n     * Text or SVG node to use as custom point symbol, or function which returns text/SVG.\n     */\n    pointSymbol: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    /**\n     * Manual x and y offset applied to the point to center it, for custom point symbols which can't be auto-centered.\n     */\n    pointOffset: PropTypes.arrayOf(PropTypes.number),\n    /**\n     * Inline style object to be applied to each point,\n     * or accessor function which returns a style object.\n     */\n    pointStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    /**\n     * Class attribute to be applied to each point,\n     * or accessor function which returns a class.\n     */\n    pointClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    /**\n     * `mouseenter` event handler callback, called when user's mouse enters a point.\n     */\n    onMouseEnterPoint: PropTypes.func,\n    /**\n     * `mousemove` event handler callback, called when user's mouse moves within a point.\n     */\n    onMouseMovePoint: PropTypes.func,\n    /**\n     * `mouseleave` event handler callback, called when user's mouse leaves a point.\n     */\n    onMouseLeavePoint: PropTypes.func\n  };\n  static defaultProps = {\n    pointRadius: 3,\n    pointSymbol: <circle />,\n    pointOffset: [0, 0],\n    pointStyle: {},\n    pointClassName: \"\"\n  };\n\n  // todo: implement getSpacing or getPadding static\n\n  onMouseEnterPoint = (e, d) => {\n    this.props.onMouseEnterPoint(e, d);\n  };\n  onMouseMovePoint = (e, d) => {\n    this.props.onMouseMovePoint(e, d);\n  };\n  onMouseLeavePoint = (e, d) => {\n    this.props.onMouseLeavePoint(e, d);\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const shouldUpdate = !xyPropsEqual(this.props, nextProps, [\"pointStyle\"]);\n    return shouldUpdate;\n  }\n\n  renderPoint = (d, i) => {\n    const [onMouseEnter, onMouseMove, onMouseLeave] = [\n      \"onMouseEnterPoint\",\n      \"onMouseMovePoint\",\n      \"onMouseLeavePoint\"\n    ].map(eventName => {\n      // partially apply this bar's data point as 2nd callback argument\n      const callback = methodIfFuncProp(eventName, this.props, this);\n      return _.isFunction(callback) ? _.partial(callback, _, d) : null;\n    });\n    const {\n      xScale,\n      yScale,\n      x,\n      y,\n      pointRadius,\n      pointOffset,\n      pointStyle,\n      pointClassName\n    } = this.props;\n    let { pointSymbol } = this.props;\n    const className = `rct-chart-scatterplot-point ${getValue(\n      pointClassName,\n      d,\n      i\n    )}`;\n    const style = getValue(pointStyle, d, i);\n    let symbolProps = {\n      className,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      key: `scatter-point-${i}`\n    };\n\n    // resolve symbol-generating functions into real symbols\n    if (_.isFunction(pointSymbol)) pointSymbol = pointSymbol(d, i);\n    // wrap string/number symbols in <text> container\n    if (_.isString(pointSymbol) || _.isNumber(pointSymbol))\n      pointSymbol = <text>{pointSymbol}</text>;\n    // use props.pointRadius for circle radius\n    if (pointSymbol.type === \"circle\" && _.isUndefined(pointSymbol.props.r))\n      symbolProps.r = pointRadius;\n\n    // x,y coords of center of symbol\n    const cx = xScale(getValue(x, d, i)) + pointOffset[0];\n    const cy = yScale(getValue(y, d, i)) + pointOffset[1];\n\n    // set positioning attributes based on symbol type\n    if (pointSymbol.type === \"circle\" || pointSymbol.type === \"ellipse\") {\n      _.assign(symbolProps, { cx, cy, style: { ...style } });\n    } else if (pointSymbol.type === \"text\") {\n      _.assign(symbolProps, {\n        x: cx,\n        y: cy,\n        style: { textAnchor: \"middle\", dominantBaseline: \"central\", ...style }\n      });\n    } else {\n      _.assign(symbolProps, {\n        x: cx,\n        y: cy,\n        style: { ...style }\n      });\n    }\n\n    return React.cloneElement(pointSymbol, symbolProps);\n  };\n\n  render() {\n    return <g>{this.props.data.map(this.renderPoint)}</g>;\n  }\n}\n"],"file":"ScatterPlot.js"}