{
  "description": "`MarkerLineChart` is similar to a bar chart,\nexcept that it just draws a line at the data value, rather than a full bar.\nIf the independent variable is a range, the length of the line will represent that range,\notherwise all lines will be the same length.\nThe dependent variable must be a single value, not a range.",
  "methods": [
    {
      "name": "getSpacing",
      "docblock": null,
      "modifiers": [
        "static"
      ],
      "params": [
        {
          "name": "props",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "getDomain",
      "docblock": null,
      "modifiers": [
        "static"
      ],
      "params": [
        {
          "name": "props",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "onMouseEnterLine",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        },
        {
          "name": "d",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "onMouseMoveLine",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        },
        {
          "name": "d",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "onMouseLeaveLine",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        },
        {
          "name": "d",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "renderRangeValueLine",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "d",
          "type": null
        },
        {
          "name": "i",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "renderValueValueLine",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "d",
          "type": null
        },
        {
          "name": "i",
          "type": null
        }
      ],
      "returns": null
    }
  ],
  "props": {
    "data": {
      "type": {
        "name": "array"
      },
      "required": true,
      "description": "Array of data objects. One marker line will be rendered per datum in the array."
    },
    "x": {
      "type": {
        "name": "custom",
        "raw": "CustomPropTypes.valueOrAccessor"
      },
      "required": false,
      "description": "Accessor function for marker line's X values, called once per line (datum), or a single value to be used for all marker lines.\nIf `horizontal` is `false`, this gets the *independent* variable value on which the line is centered.\nIf `horizontal` is `true`, this gets the start (minimum value) of the *dependent* variable."
    },
    "y": {
      "type": {
        "name": "custom",
        "raw": "CustomPropTypes.valueOrAccessor"
      },
      "required": false,
      "description": "Accessor function for marker line's Y values, called once per line (datum), or a single value to be used for all marker lines.\nIf `horizontal` is `false`, this gets the start (minimum value) of the *dependent* variable.\nIf `horizontal` is `true`, this gets the *independent* variable value on which the line is centered."
    },
    "xEnd": {
      "type": {
        "name": "custom",
        "raw": "CustomPropTypes.valueOrAccessor"
      },
      "required": false,
      "description": "Accessor function for the end (maximum X-values) of the *dependent* variable, which is where the marker line is rendered,\nor a single value to be used for all marker lines.\nShould only be passed when `horizontal` is `true` (ignored otherwise)."
    },
    "yEnd": {
      "type": {
        "name": "custom",
        "raw": "CustomPropTypes.valueOrAccessor"
      },
      "required": false,
      "description": "Accessor function for the end (maximum Y-values) of the *dependent* variable range which is where the marker line is rendered,\nor a single value to be used for all marker lines.\nShould only be passed when `horizontal` is `false` (ignored otherwise)."
    },
    "horizontal": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Boolean which determines whether the chart will be horizontal.\nWhen `true` the X-axis will be treated as the dependent axis.",
      "defaultValue": {
        "value": "false",
        "computed": false
      }
    },
    "lineLength": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "",
      "defaultValue": {
        "value": "10",
        "computed": false
      }
    },
    "xScaleType": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "D3 scale type for X axis - provided by XYPlot."
    },
    "yScaleType": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "D3 scale type for Y axis - provided by XYPlot."
    },
    "xScale": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "D3 scale for X axis - provided by XYPlot."
    },
    "yScale": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "D3 scale for Y axis - provided by XYPlot."
    },
    "lineClassName": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "string"
          },
          {
            "name": "func"
          }
        ]
      },
      "required": false,
      "description": "Class attribute to be applied to the line path,\nor accessor function which returns a class.",
      "defaultValue": {
        "value": "''",
        "computed": false
      }
    },
    "lineStyle": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "object"
          },
          {
            "name": "func"
          }
        ]
      },
      "required": false,
      "description": "Inline style object to be applied to each marker line,\nor accessor function which returns a style object.",
      "defaultValue": {
        "value": "{}",
        "computed": false
      }
    },
    "onMouseEnterLine": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "`mouseenter` event handler callback, called when user's mouse enters a marker line."
    },
    "onMouseMoveLine": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "`mousemove` event handler callback, called when user's mouse moves within a marker line."
    },
    "onMouseLeaveLine": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "`mouseleave` event handler callback, called when user's mouse leaves a marker line."
    }
  }
}