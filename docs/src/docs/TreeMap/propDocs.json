{
  "description": "`TreeMap` displays hierarchical data where a leaf node's rectangle has an area proportional to a specified dimension of the data.",
  "methods": [],
  "props": {
    "width": {
      "type": {
        "name": "number"
      },
      "required": true,
      "description": ""
    },
    "height": {
      "type": {
        "name": "number"
      },
      "required": true,
      "description": ""
    },
    "data": {
      "type": {
        "name": "object"
      },
      "required": true,
      "description": ""
    },
    "getValue": {
      "type": {
        "name": "custom",
        "raw": "CustomPropTypes.getter"
      },
      "required": false,
      "description": "Key or accessor to retrieve value of data point",
      "defaultValue": {
        "value": "'value'",
        "computed": false
      }
    },
    "getChildren": {
      "type": {
        "name": "custom",
        "raw": "CustomPropTypes.getter"
      },
      "required": false,
      "description": "Key or accessor to retrieve children of data point",
      "defaultValue": {
        "value": "'children'",
        "computed": false
      }
    },
    "getLabel": {
      "type": {
        "name": "custom",
        "raw": "CustomPropTypes.getter"
      },
      "required": false,
      "description": "Key or accessor to retrieve label for given Node",
      "defaultValue": {
        "value": "'name'",
        "computed": false
      }
    },
    "sort": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Function passed in to sort nodes"
    },
    "padding": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "See d3 docs for treemap - Adds outer and inner padding to tree"
    },
    "round": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "See d3 docs for treemap - Enables or disables rounding"
    },
    "sticky": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If sticky, on data change the TreeMap will not force a recreation of the tree and animate data changes.\nOtherwise we recreate the tree given its new props"
    },
    "ratio": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "Sets the desired aspect ratio of the generated rectangles"
    },
    "nodeStyle": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "func"
          },
          {
            "name": "object"
          }
        ]
      },
      "required": false,
      "description": "Inline style object applied to each Node,\nor accessor function which returns a style object"
    },
    "labelStyle": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "func"
          },
          {
            "name": "object"
          }
        ]
      },
      "required": false,
      "description": "Inline style object applied to each Label,\nor accessor function which returns a style object"
    },
    "minLabelWidth": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "",
      "defaultValue": {
        "value": "0",
        "computed": false
      }
    },
    "minLabelHeight": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "",
      "defaultValue": {
        "value": "0",
        "computed": false
      }
    },
    "onClickNode": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "`onClick` event handler callback, called when user clicks a NodeComponent."
    },
    "onMouseEnterNode": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "`mouseenter` event handler callback, called when user's mouse enters a NodeComponent."
    },
    "onMouseLeaveNode": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "`mouseleave` event handler callback, called when user's mouse leaves a NodeComponent."
    },
    "onMouseMoveNode": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "`mousemove` event handler callback, called when user's mouse moves within a NodeComponent."
    },
    "NodeComponent": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Optional treemap node, otherwise we default to our TreeMapNode component",
      "defaultValue": {
        "value": "TreeMapNode",
        "computed": true
      }
    },
    "NodeLabelComponent": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Optional treemap node label, otherwise we default to our TreeMapNodeLabel component",
      "defaultValue": {
        "value": "TreeMapNodeLabel",
        "computed": true
      }
    }
  }
}