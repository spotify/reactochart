{
  "description": "`A11yInterface` provides a mechanism for keyboard navigation of\n`LineChart` and `AreaChart` graphs within `XYPlot`. This component renders\na rectangle for a given `numFrames` across a Line/Area chart. Users can navigate to a frame\neither by pressing `Tab`, or through their assistive technology. `A11yInterface`\ntakes an `ariaLabelGenerator`, which generates an aria-label for each frame of the chart.\n[aria-labels](https://www.w3.org/TR/WCAG20-TECHS/ARIA6.html#ARIA6-description) are critical for users accessing\nthe web with screenreaders or other assistive technologies.",
  "displayName": "A11yInterface",
  "methods": [],
  "props": {
    "ariaLabelGenerator": {
      "type": {
        "name": "func"
      },
      "required": true,
      "description": "A function that takes the index of the frame,\nand returns a string to render as an aria label\nfor the specific frame in the Interface.\n\n(frameIndex) => string"
    },
    "numFrames": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "the number of frames to render across the visualization\n(e.g. the number of data points to message via screen reader)"
    },
    "onKeyDown": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "an optional `onKeyDown` event handler to provide for each frame\nwhen selected.\nBest practices are to describe how the user will interact with the chart in\nthe ariaLabelGenerator\n\n(event, frameIndex) => void"
    },
    "height": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "height of the chart - provided by `XYPlot`"
    },
    "width": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "width of the chart - provided by `XYPlot`"
    }
  }
}
