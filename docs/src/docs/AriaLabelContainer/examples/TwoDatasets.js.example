const AriaLabelContainerExample = (props) => {
  const data0 = _.range(10).map(d => ({
    x: d,
    y: Math.round(d * Math.random() * 10)
  }))
  const data1 = _.range(7).map(d => ({
    x: d,
    y: Math.round(d * Math.random() * 10)
  }))

  const ariaLabelGenerator = xValue => {
    const data0Point = data0.find(d => d.x === xValue);
    const data1Point = data1.find(d => d.x === xValue);
    let ariaLabelString = `x Value, ${xValue}`;
    if(data0Point) {
      ariaLabelString += `, data0 y Value ${data0Point.y}`;
    }
    if(data1Point) {
      ariaLabelString += `, data1 y Value ${data1Point.y}`;
    }
    return ariaLabelString;
  }
        
        
  return <XYPlot scaleType="linear" width={600} height={350}>
      <XAxis title="X Axis" />
      <YAxis title="Y Axis" />
      <LineChart
        data={data0}
        x={d => d.x}
        y={d => d.y}
        lineStyle={{stroke: '#ff7f0e', strokeWidth: 3}}
      />
      <LineChart
        data={data1}
        x={d => d.x}
        y={d => d.y}
        lineStyle={{stroke: '#2ca02c', strokeWidth: 3}}
      />
      <AriaLabelContainer
        ariaLabelGenerator={ariaLabelGenerator}
        datasetWithAccessor={[
          {
            data: data0,
            accessor: d => d.x,
          },
          {
            data: data1,
            accessor: d => d.x,
          }
        ]}
       />
    </XYPlot>;
};

ReactDOM.render(<AriaLabelContainerExample />, mountNode);
