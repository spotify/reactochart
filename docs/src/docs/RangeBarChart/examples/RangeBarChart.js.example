const RangeBarChartExample = (props) => {
  const count = 30;
  const dateDomain = [new Date(1992, 0, 1), new Date(2001, 0, 1)];
  const numberDomain = [-2, 2];
  const ordinalDomain = _.range(count).map(n => String.fromCharCode(97 + n));

  const dates = _.range(30).map(n => new Date(+(dateDomain[0]) + (n * 1000 * 60 * 60 * 24 * 100)));

  const addDays = (date, n) => new Date(+(date) + (1000 * 60 * 60 * 24 * n));

  const numberRanges =
    _.range(30).map(n => [Math.sin(n/5), Math.sin(n/8) + Math.cos(n/5)].sort((a, b) => (a - b)));
  const dateRanges =
    _.range(30).map(n => [dates[n], addDays(dates[n], (Math.sin(n/8) * 100))].sort((a, b) => (a - b)));

  const numberNumberRangeData = _.zip(_.range(30), numberRanges);
  const dateNumberRangeData = _.zip(dates, numberRanges);
  const ordinalNumberRangeData = _.zip(ordinalDomain, numberRanges);

  const numberDateRangeData = _.zip(_.range(30), dateRanges);
  const dateDateRangeData = _.zip(dates, dateRanges);
  const ordinalDateRangeData = _.zip(ordinalDomain, dateRanges);

  return <div>

    {[true, false].map(horizontal => {
      const title = horizontal ? "Horizontal" : "Vertical";
      const getters = horizontal ?
        {y: d => d[0], x: d => d[1][0], xEnd: d => d[1][1]} :
        {x: d => d[0], y: d => d[1][0], yEnd: d => d[1][1]};

      const depDomain = horizontal ? 'xDomain' : 'yDomain';
      const indepDomain = horizontal ? 'yDomain' : 'xDomain';
      const size = {width: 300, height: 350};

      return <div key={horizontal}>
        <h2>{title}</h2>

        <div>
          <XYPlot {...size}>
            <XAxis/><YAxis/>
            <RangeBarChart
              horizontal={horizontal}
              data={numberNumberRangeData}
              {...getters}
            />
          </XYPlot>

          <XYPlot {...size}>
            <XAxis/><YAxis/>
            <RangeBarChart
              horizontal={horizontal}
              data={dateNumberRangeData}
              {...getters}
            />
          </XYPlot>

          <XYPlot {...size}>
            <XAxis/><YAxis/>
            <RangeBarChart
              horizontal={horizontal}
              data={ordinalNumberRangeData}
              {...getters}
            />
          </XYPlot>
        </div>

        <div>
          <XYPlot {...size}>
            <XAxis/><YAxis/>
            <RangeBarChart
              horizontal={horizontal}
              data={numberDateRangeData}
              {...getters}
            />
          </XYPlot>

          <XYPlot {...size}>
            <XAxis/><YAxis/>
            <RangeBarChart
              horizontal={horizontal}
              data={dateDateRangeData}
              {...getters}
            />
          </XYPlot>

          <XYPlot {...size}>
            <XAxis/><YAxis/>
            <RangeBarChart
              horizontal={horizontal}
              data={ordinalDateRangeData}
              {...getters}
            />
          </XYPlot>
        </div>
      </div>
    })}

    <XYPlot {...{width: 300, height: 350}}>
      <XAxis/><YAxis/>
      <RangeBarChart
        data={_.range(-1, 1, .1)}
        x={d => d}
        y={d => Math.sin(d*2)}
        yEnd={d => Math.sin(d*2) * Math.cos(d*2)}
        barThickness={6}
      />
    </XYPlot>
  </div>
};

ReactDOM.render(<RangeBarChartExample />, mountNode);
