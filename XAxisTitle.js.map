{"version":3,"sources":["src/XAxisTitle.js"],"names":["XAxisTitle","props","height","width","distance","position","alignment","style","spacingTop","spacingBottom","title","children","placement","rotate","posY","translateY","translateX","textAnchor","dy","defaults","defaultProps","zeroMargin","marginTop","marginBottom","marginLeft","marginRight","measured","assign","text","marginValue","Math","ceil","value","Component","propTypes","number","oneOf","bool","object","undefined","fontFamily","fontSize","fontWeight","lineHeight"],"mappings":"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","file":"XAxisTitle.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport measureText from \"measure-text\";\nimport PropTypes from \"prop-types\";\n\nexport default class XAxisTitle extends React.Component {\n  static propTypes = {\n    height: PropTypes.number,\n    width: PropTypes.number,\n    distance: PropTypes.number,\n    position: PropTypes.oneOf([\"top\", \"bottom\"]),\n    placement: PropTypes.oneOf([\"above\", \"below\"]),\n    alignment: PropTypes.oneOf([\"left\", \"center\", \"right\"]),\n    rotate: PropTypes.bool,\n    style: PropTypes.object,\n    spacingTop: PropTypes.number,\n    spacingBottom: PropTypes.number\n  };\n  static defaultProps = {\n    height: 250,\n    width: 400,\n    distance: 5,\n    position: \"bottom\",\n    placement: undefined,\n    alignment: \"center\",\n    rotate: false,\n    style: {\n      fontFamily: \"Helvetica, sans-serif\",\n      fontSize: \"24px\",\n      fontWeight: \"bold\",\n      lineHeight: 1\n    },\n    spacingTop: 0,\n    spacingBottom: 0\n  };\n\n  static getMargin(props) {\n    props = _.defaults({}, props, XAxisTitle.defaultProps);\n    const { distance, position, rotate } = props;\n    const placement =\n      props.placement || (position === \"bottom\" ? \"below\" : \"above\");\n    const zeroMargin = {\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: 0,\n      marginRight: 0\n    };\n\n    if (\n      (position === \"bottom\" && placement === \"above\") ||\n      (position === \"top\" && placement === \"below\")\n    )\n      return zeroMargin;\n\n    const title = props.title || props.children;\n    const style = _.defaults(props.style, XAxisTitle.defaultProps.style);\n    const measured = measureText(_.assign({ text: title }, style));\n\n    const marginValue =\n      distance +\n      Math.ceil(rotate ? measured.width.value : measured.height.value);\n\n    return position === \"bottom\"\n      ? { ...zeroMargin, marginBottom: marginValue }\n      : { ...zeroMargin, marginTop: marginValue };\n  }\n\n  render() {\n    const {\n      height,\n      width,\n      distance,\n      position,\n      alignment,\n      style,\n      spacingTop,\n      spacingBottom\n    } = this.props;\n    const title = this.props.title || this.props.children;\n    const placement =\n      this.props.placement || (position === \"bottom\" ? \"below\" : \"above\");\n    const rotate = this.props.rotate ? -90 : 0;\n\n    const posY = position === \"bottom\" ? height + spacingBottom : -spacingTop;\n    const translateY = posY + (placement === \"above\" ? -distance : distance);\n    const translateX =\n      alignment === \"center\" ? width / 2 : alignment === \"right\" ? width : 0;\n\n    const textAnchor =\n      rotate && placement === \"above\"\n        ? \"start\"\n        : rotate && placement === \"below\"\n          ? \"end\"\n          : alignment === \"left\"\n            ? \"start\"\n            : alignment === \"right\"\n              ? \"end\"\n              : \"middle\";\n\n    const dy =\n      rotate && alignment === \"right\"\n        ? \"-0.2em\"\n        : rotate && alignment === \"center\"\n          ? \"0.3em\"\n          : rotate\n            ? \"0.8em\"\n            : placement === \"below\"\n              ? \"0.8em\"\n              : \"-0.2em\";\n\n    return (\n      <g transform={`translate(${translateX},${translateY})`}>\n        <text\n          style={{ ...style, textAnchor }}\n          transform={`rotate(${rotate})`}\n          dy={dy}\n        >\n          {title}\n        </text>\n      </g>\n    );\n  }\n}\n"]}