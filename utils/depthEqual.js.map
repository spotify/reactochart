{"version":3,"sources":["../src/utils/depthEqual.js"],"names":["hasOwnProperty","Object","prototype","depthEqual","objA","objB","depth","keysA","keys","keysB","length","bHasOwnProperty","bind","i","aKey"],"mappings":";;;;;;AAAA;AAEA,MAAMA,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAxC;;AAEe,SAASG,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,KAAK,GAAG,CAAxC,EAA2C;AACxD,MAAIF,IAAI,KAAKC,IAAb,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,MACEC,KAAK,KAAK,CAAV,IACA,OAAOF,IAAP,KAAgB,QADhB,IAEAA,IAAI,KAAK,IAFT,IAGA,OAAOC,IAAP,KAAgB,QAHhB,IAIAA,IAAI,KAAK,IALX,EAME;AACA;AACA,WAAO,KAAP;AACD;;AAED,QAAME,KAAK,GAAGN,MAAM,CAACO,IAAP,CAAYJ,IAAZ,CAAd;AACA,QAAMK,KAAK,GAAGR,MAAM,CAACO,IAAP,CAAYH,IAAZ,CAAd;;AAEA,MAAIE,KAAK,CAACG,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC;AACjC,WAAO,KAAP;AACD,GArBuD,CAuBxD;;;AACA,QAAMC,eAAe,GAAGX,cAAc,CAACY,IAAf,CAAoBP,IAApB,CAAxB;;AACA,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACG,MAA1B,EAAkCG,CAAC,EAAnC,EAAuC;AACrC,UAAMC,IAAI,GAAGP,KAAK,CAACM,CAAD,CAAlB;;AACA,QACE,CAACF,eAAe,CAACG,IAAD,CAAhB,IACA;AACA,KAACX,UAAU,CAACC,IAAI,CAACU,IAAD,CAAL,EAAaT,IAAI,CAACS,IAAD,CAAjB,EAAyBR,KAAK,GAAG,CAAjC,CAHb,EAIE;AACA;AACA,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["// Based on https://github.com/acdlite/recompose/blob/master/src/packages/recompose/shallowEqual.js\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default function depthEqual(objA, objB, depth = 1) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (\n    depth === 0 ||\n    typeof objA !== \"object\" ||\n    objA === null ||\n    typeof objB !== \"object\" ||\n    objB === null\n  ) {\n    // console.log('different obj', objA, objB);\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  const bHasOwnProperty = hasOwnProperty.bind(objB);\n  for (let i = 0; i < keysA.length; i++) {\n    const aKey = keysA[i];\n    if (\n      !bHasOwnProperty(aKey) ||\n      // recursively call depthEqual at the next level; depth 0 is === check\n      !depthEqual(objA[aKey], objB[aKey], depth - 1)\n    ) {\n      // console.log('different key', aKey, objA, objB);\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"file":"depthEqual.js"}