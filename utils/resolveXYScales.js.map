{"version":3,"sources":["../src/utils/resolveXYScales.js"],"names":["isValidScaleType","scaleType","validScaleTypes","_","includes","areValidScaleTypes","scaleTypes","every","mapOverChildren","children","iteratee","iterateeArgs","isFunction","Error","compact","React","Children","map","child","isValidElement","props","type","omitNullUndefined","obj","omitBy","v","isUndefined","isNull","resolveXYScales","ComposedComponent","Component","width","height","xScaleType","yScaleType","invertXScale","invertYScale","xDomain","yDomain","xScale","yScale","marginTop","marginBottom","marginLeft","marginRight","spacingTop","spacingBottom","spacingLeft","spacingRight","spacing","top","bottom","left","right","margin","innerChartWidth","innerChartHeight","xRange","domain","range","reverse","yRange","_resolveScaleType","isDone","getScaleType","componentScaleTypes","assign","isArray","data","datasets","x","y","count","childrenScaleTypes","bind","childXScaleTypes","uniq","childScaleTypes","length","console","warn","childYScaleTypes","_resolveDomain","includeXZero","includeYZero","xDataType","yDataType","isXDone","isYDone","getDomain","componentXDomain","componentYDomain","childrenDomains","childXDomains","childDomains","childYDomains","inRange","_resolveTickDomain","getTickDomain","componentTickDomains","childrenTickDomains","childrenXTickDomains","childTickDomains","xTickDomain","undefined","childrenYTickDomains","yTickDomain","_resolveMargin","isNumber","getMargin","componentMargin","childrenMargins","childrenMargin","childMargins","_resolveSpacing","getSpacing","componentSpacing","childrenSpacings","childrenSpacing","childSpacing","render","slice","scaleOptions","scaleX","scaleY","tempScale","_makeScales","tempXScale","tempYScale","defaults","passedProps","defaultProps"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport {\n  combineBorderObjects,\n  combineDomains,\n  domainFromDatasets,\n  inferDatasetsType,\n  isValidDomain,\n  makeAccessor2\n} from \"./Data\";\nimport { innerHeight, innerRangeX, innerRangeY, innerWidth } from \"./Margin\";\nimport {\n  dataTypeFromScaleType,\n  inferDataTypeFromDomain,\n  initScale,\n  isValidScale,\n  scaleTypeFromDataType\n} from \"./Scale\";\n\n/**\n * `resolveXYScales` is a higher-order-component.\n *\n * @param {Component} Component - The React Component (class) which should be wrapped by this HOC\n * @returns {Component} - A Component which auto-resolves XY scales from given props\n */\n\nfunction isValidScaleType(scaleType) {\n  const validScaleTypes = [\"ordinal\", \"time\", \"log\", \"pow\", \"linear\"];\n\n  return _.includes(validScaleTypes, scaleType);\n}\n\nfunction areValidScaleTypes(scaleTypes) {\n  return _.every(scaleTypes, isValidScaleType);\n}\n\nfunction mapOverChildren(children, iteratee, ...iterateeArgs) {\n  // loop over all children (react elements) and call iteratee (a function) on each one\n  // iteratee is called with parameters (child.props, child.type, ...iterateeArgs)\n  if (!_.isFunction(iteratee))\n    throw new Error(\"mapOverChildren iteratee must be a function\");\n\n  return _.compact(\n    React.Children.map(children, child => {\n      if (!child || !React.isValidElement(child)) return null;\n      return iteratee(child.props, child.type, ...iterateeArgs);\n    })\n  );\n}\nfunction omitNullUndefined(obj) {\n  return _.omitBy(obj, v => _.isUndefined(v) || _.isNull(v));\n}\n\n// not currently being used but potentially has some learnings\n// attempt at condensing all the resolve functions below\n// function resolveXYPropsOnComponentOrChildren(propKeys, props, reducers = {}, validators = {}, result = {}) {\n//   const isDone = (o) => (_.every(propKeys, k => _.isObject(o[k]) && _.every(['x', 'y'], xy => _.has(o[k][xy]))));\n//   result = _.pick({...props, ...result}, propKeys);\n\n//   let resolved = {};\n//   _.forEach(propKeys, propKey => {\n//     _.forEach(['x', 'y'], k => {\n//       const isValid = validators[propKey] || (() => true);\n//       if(_.isObject(props[propKey]) && _.has(props[propKey], k) && isValid(props[propKey][k])) {\n//         if(!_.has(result, propKey)) result[propKey] = {};\n//         result[propKey][k] = props[propKey][k];\n//       }\n//     });\n//   });\n\n//   if(isDone(result)) return result;\n\n//   if(React.Children.count(props.children)) {\n//     let childProps = mapOverChildren(props.children, resolveXYPropsOnComponentOrChildren, propKeys, 'props', result);\n//     React.Children.forEach(props.children, child => {\n//       if(!child) return;\n//       childProps.push(resolveXYPropsOnComponentOrChildren(propKeys, child.props, result));\n//     });\n//       let childDomains = [];\n//       React.Children.forEach(props.children, child => {\n//         childDomains = childDomains.concat(this._resolveDomain(child.props, child.type, scaleType));\n//       });\n\n//       console.log('combining domains', childDomains);\n//       const childDomain =  _.fromPairs(['x', 'y'].map(k => {\n//         console.log(_.compact(_.map(childDomains, k)), scaleType[k]);\n//         const kDomain = combineDomains(_.compact(_.map(childDomains, k)), dataTypeFromScaleType(scaleType[k]));\n//         console.log(kDomain);\n//         return [k, kDomain];\n//       }));\n//       console.log('combined domains', childDomain);\n\n//       domain = _.assign(childDomain, domain);\n//       return domain;\n//   }\n\n//   propKeys.forEach(k => {\n//     result[propKeys] = props\n//   })\n// }\n\nexport default function resolveXYScales(ComposedComponent) {\n  return class extends React.Component {\n    // todo better way for HOC's to pass statics through?\n    static getScaleType = ComposedComponent.getScaleType;\n    static getSpacing = ComposedComponent.getSpacing;\n    static getDomain = ComposedComponent.getDomain;\n    static getMargin = ComposedComponent.getMargin;\n    static defaultProps = ComposedComponent.defaultProps;\n\n    _resolveScaleType(props, Component) {\n      let { xScaleType, yScaleType } = props;\n\n      const isDone = () => areValidScaleTypes([xScaleType, yScaleType]);\n\n      // short-circuit if both scale types provided\n      if (isDone()) return { xScaleType, yScaleType };\n\n      // if Component provides a custom static getScaleType method\n      // use it to determine remaining scale types\n      if (_.isFunction(Component.getScaleType)) {\n        const componentScaleTypes = omitNullUndefined(\n          Component.getScaleType(props)\n        );\n        ({ xScaleType, yScaleType } = _.assign(\n          componentScaleTypes,\n          omitNullUndefined({ xScaleType, yScaleType })\n        ));\n        if (isDone()) return { xScaleType, yScaleType };\n      }\n\n      // if component has domain props,\n      // infer the data type, & use that to get scale type\n      if (!isValidScaleType(xScaleType) && isValidDomain(props.xDomain)) {\n        xScaleType = scaleTypeFromDataType(\n          inferDataTypeFromDomain(props.xDomain)\n        );\n      }\n      if (!isValidScaleType(yScaleType) && isValidDomain(props.yDomain)) {\n        yScaleType = scaleTypeFromDataType(\n          inferDataTypeFromDomain(props.yDomain)\n        );\n      }\n      if (isDone()) return { xScaleType, yScaleType };\n\n      // if Component has data or datasets props,\n      // infer the data type, & use that to get scale type\n      if (_.isArray(props.data) || _.isArray(props.datasets)) {\n        const datasets = _.isArray(props.datasets)\n          ? props.datasets\n          : [props.data];\n\n        if (!isValidScaleType(xScaleType)) {\n          xScaleType = scaleTypeFromDataType(\n            inferDatasetsType(datasets, makeAccessor2(props.x))\n          );\n        }\n        if (!isValidScaleType(yScaleType)) {\n          yScaleType = scaleTypeFromDataType(\n            inferDatasetsType(datasets, makeAccessor2(props.y))\n          );\n        }\n        if (isDone()) return { xScaleType, yScaleType };\n      }\n\n      // if Component has children,\n      // recurse through descendants to resolve their scale types the same way\n      if (React.Children.count(props.children)) {\n        let childrenScaleTypes = mapOverChildren(\n          props.children,\n          this._resolveScaleType.bind(this)\n        );\n\n        if (!isValidScaleType(xScaleType)) {\n          const childXScaleTypes = _.compact(\n            _.uniq(\n              childrenScaleTypes.map(\n                childScaleTypes => childScaleTypes.xScaleType\n              )\n            )\n          );\n          if (!childXScaleTypes.length === 1)\n            console.warn(\n              \"Multiple children with different X scale types found - defaulting to 'ordinal'\"\n            );\n          xScaleType =\n            childXScaleTypes.length === 1 ? childXScaleTypes[0] : \"ordinal\";\n        }\n        if (!isValidScaleType(yScaleType)) {\n          const childYScaleTypes = _.compact(\n            _.uniq(\n              childrenScaleTypes.map(\n                childScaleTypes => childScaleTypes.yScaleType\n              )\n            )\n          );\n          if (!childYScaleTypes.length === 1)\n            console.warn(\n              \"Multiple children with different Y scale types found - defaulting to 'ordinal'\"\n            );\n          yScaleType =\n            childYScaleTypes.length === 1 ? childYScaleTypes[0] : \"ordinal\";\n        }\n      }\n\n      // if(!isDone()) console.warn(`resolveXYScales was unable to resolve both scale types. xScaleType: ${xScaleType}, yScaleType: ${yScaleType}`);\n\n      return { xScaleType, yScaleType };\n    }\n\n    _resolveDomain(props, Component, xScaleType, yScaleType) {\n      let { xDomain, yDomain, includeXZero, includeYZero } = props;\n      const xDataType = dataTypeFromScaleType(xScaleType);\n      const yDataType = dataTypeFromScaleType(yScaleType);\n\n      const isXDone = () => isValidDomain(xDomain, xDataType);\n      const isYDone = () => isValidDomain(yDomain, yDataType);\n      const isDone = () => isXDone() && isYDone();\n\n      // short-circuit if all domains provided\n      if (isDone()) return { xDomain, yDomain };\n\n      // if Component provides a custom static getScaleType method\n      // use it to determine remaining scale types\n      if (_.isFunction(Component.getDomain)) {\n        const {\n          xDomain: componentXDomain,\n          yDomain: componentYDomain\n        } = Component.getDomain({ ...props, xScaleType, yScaleType });\n\n        if (\n          !isXDone() &&\n          componentXDomain &&\n          !isValidDomain(componentXDomain, xDataType)\n        )\n          console.warn(\n            `Component.getDomain returned an invalid domain for data type '${xDataType}': ${componentXDomain} - ignoring`\n          );\n        if (!isXDone() && isValidDomain(componentXDomain, xDataType))\n          xDomain = componentXDomain;\n\n        if (\n          !isYDone() &&\n          componentYDomain &&\n          !isValidDomain(componentYDomain, yDataType)\n        )\n          console.warn(\n            `Component.getDomain returned an invalid domain for data type '${yDataType}': ${componentYDomain} - ignoring`\n          );\n        if (!isYDone() && isValidDomain(componentYDomain, yDataType))\n          yDomain = componentYDomain;\n      }\n\n      // if Component has data or datasets props,\n      // use the default domainFromDatasets function to determine a domain from them\n      if (!isDone() && (_.isArray(props.data) || _.isArray(props.datasets))) {\n        const datasets = _.isArray(props.datasets)\n          ? props.datasets\n          : [props.data];\n        if (!isXDone()) {\n          xDomain = domainFromDatasets(\n            datasets,\n            makeAccessor2(props.x),\n            xDataType\n          );\n        }\n        if (!isYDone()) {\n          yDomain = domainFromDatasets(\n            datasets,\n            makeAccessor2(props.y),\n            yDataType\n          );\n        }\n      }\n\n      // if Component has children,\n      // recurse through descendants to resolve their domains the same way,\n      // and combine them into a single domain, if there are multiple\n      if (!isDone() && React.Children.count(props.children)) {\n        let childrenDomains = mapOverChildren(\n          props.children,\n          this._resolveDomain.bind(this),\n          xScaleType,\n          yScaleType\n        );\n\n        if (!isXDone()) {\n          const childXDomains = _.compact(\n            childrenDomains.map(childDomains => childDomains.xDomain)\n          );\n          xDomain = combineDomains(childXDomains, xDataType);\n        }\n        if (!isYDone()) {\n          const childYDomains = _.compact(\n            childrenDomains.map(childDomains => childDomains.yDomain)\n          );\n          yDomain = combineDomains(childYDomains, yDataType);\n        }\n      }\n\n      if (isDone()) {\n        if (includeXZero && !_.inRange(0, ...xDomain)) {\n          // If both are negative set max of domain to 0\n          if (xDomain[0] < 0 && xDomain[1] < 0) {\n            xDomain[1] = 0;\n          } else {\n            xDomain[0] = 0;\n          }\n        }\n\n        if (includeYZero && !_.inRange(0, ...yDomain)) {\n          // If both are negative set max of domain to 0\n          if (yDomain[0] < 0 && yDomain[1] < 0) {\n            yDomain[1] = 0;\n          } else {\n            yDomain[0] = 0;\n          }\n        }\n      }\n\n      // TODO handle resolveXYScales not calculating the domain\n      // Because this is recursive on its children it will log this warn for children missing domain\n      // even though it is later inferred by parent later during the recursion\n      // if (!isDone()) {\n      //   console.warn(`resolveXYScales was unable to resolve both domains. xDomain: ${xDomain}, yDomain: ${yDomain}`);\n      // }\n\n      return { xDomain, yDomain };\n    }\n\n    _resolveTickDomain(\n      props,\n      Component,\n      { xScaleType, yScaleType, xDomain, yDomain, xScale, yScale }\n    ) {\n      if (_.isFunction(Component.getTickDomain)) {\n        const componentTickDomains = Component.getTickDomain({\n          xScaleType,\n          yScaleType,\n          xDomain,\n          yDomain,\n          xScale,\n          yScale,\n          ...props\n        });\n        return omitNullUndefined(componentTickDomains);\n      }\n\n      if (React.Children.count(props.children)) {\n        let childrenTickDomains = mapOverChildren(\n          props.children,\n          this._resolveTickDomain.bind(this),\n          { xScaleType, yScaleType, xDomain, yDomain, xScale, yScale }\n        );\n\n        const childrenXTickDomains = _.compact(\n          childrenTickDomains.map(\n            childTickDomains => childTickDomains.xTickDomain\n          )\n        );\n        const xTickDomain = childrenXTickDomains.length\n          ? combineDomains(\n              childrenXTickDomains,\n              dataTypeFromScaleType(xScaleType)\n            )\n          : undefined;\n\n        const childrenYTickDomains = _.compact(\n          childrenTickDomains.map(\n            childTickDomains => childTickDomains.yTickDomain\n          )\n        );\n        const yTickDomain = childrenYTickDomains.length\n          ? combineDomains(\n              childrenYTickDomains,\n              dataTypeFromScaleType(yScaleType)\n            )\n          : undefined;\n\n        return omitNullUndefined({ xTickDomain, yTickDomain });\n      }\n\n      return {};\n    }\n\n    _resolveMargin(\n      props,\n      Component,\n      { xScaleType, yScaleType, xDomain, yDomain, xScale, yScale }\n    ) {\n      let { marginTop, marginBottom, marginLeft, marginRight } = props;\n\n      const isDone = () =>\n        _.every([marginTop, marginBottom, marginLeft, marginRight], _.isNumber);\n\n      // short-circuit if all margins provided\n      if (isDone()) return { marginTop, marginBottom, marginLeft, marginRight };\n\n      // if Component provides a custom static getMargin method\n      // use it to determine remaining domains\n      if (_.isFunction(Component.getMargin)) {\n        const componentMargin = omitNullUndefined(\n          Component.getMargin({\n            ...props,\n            xScaleType,\n            yScaleType,\n            xDomain,\n            yDomain,\n            xScale,\n            yScale\n          })\n        );\n        ({ marginTop, marginBottom, marginLeft, marginRight } = _.assign(\n          componentMargin,\n          omitNullUndefined({\n            marginTop,\n            marginBottom,\n            marginLeft,\n            marginRight\n          })\n        ));\n        if (isDone())\n          return { marginTop, marginBottom, marginLeft, marginRight };\n      }\n\n      // if Component has children,\n      // recurse through descendants to resolve their margins the same way,\n      // and combine them into a single margin, if there are multiple\n      if (React.Children.count(props.children)) {\n        let childrenMargins = mapOverChildren(\n          props.children,\n          this._resolveMargin.bind(this),\n          { xScaleType, yScaleType, xDomain, yDomain, xScale, yScale }\n        );\n\n        // console.log('combining child margins', childMargins);\n        const childrenMargin = combineBorderObjects(\n          childrenMargins.map(childMargins => ({\n            top: childMargins.marginTop,\n            bottom: childMargins.marginBottom,\n            left: childMargins.marginLeft,\n            right: childMargins.marginRight\n          }))\n        );\n\n        marginTop = _.isUndefined(marginTop) ? childrenMargin.top : marginTop;\n        marginBottom = _.isUndefined(marginBottom)\n          ? childrenMargin.bottom\n          : marginBottom;\n        marginLeft = _.isUndefined(marginLeft)\n          ? childrenMargin.left\n          : marginLeft;\n        marginRight = _.isUndefined(marginRight)\n          ? childrenMargin.right\n          : marginRight;\n      }\n\n      return { marginTop, marginBottom, marginLeft, marginRight };\n    }\n\n    _resolveSpacing(\n      props,\n      Component,\n      { xScaleType, yScaleType, xDomain, yDomain, xScale, yScale }\n    ) {\n      let { spacingTop, spacingBottom, spacingLeft, spacingRight } = props;\n\n      const isDone = () =>\n        _.every(\n          [spacingTop, spacingBottom, spacingLeft, spacingRight],\n          _.isNumber\n        );\n\n      // short-circuit if all spacing provided\n      if (isDone())\n        return { spacingTop, spacingBottom, spacingLeft, spacingRight };\n\n      // if Component provides a custom static getSpacing method\n      // use it to determine remaining domains\n      if (_.isFunction(Component.getSpacing)) {\n        const componentSpacing = omitNullUndefined(\n          Component.getSpacing({\n            ...props,\n            xScaleType,\n            yScaleType,\n            xDomain,\n            yDomain,\n            xScale,\n            yScale\n          })\n        );\n        ({ spacingTop, spacingBottom, spacingLeft, spacingRight } = _.assign(\n          componentSpacing,\n          omitNullUndefined({\n            spacingTop,\n            spacingBottom,\n            spacingLeft,\n            spacingRight\n          })\n        ));\n        if (isDone())\n          return { spacingTop, spacingBottom, spacingLeft, spacingRight };\n      }\n\n      // if Component has children,\n      // recurse through descendants to resolve their spacings the same way,\n      // and combine them into a single spacing, if there are multiple\n      if (React.Children.count(props.children)) {\n        let childrenSpacings = mapOverChildren(\n          props.children,\n          this._resolveSpacing.bind(this),\n          { xScaleType, yScaleType, xDomain, yDomain, xScale, yScale }\n        );\n\n        const childrenSpacing = combineBorderObjects(\n          childrenSpacings.map(childSpacing => ({\n            top: childSpacing.spacingTop,\n            bottom: childSpacing.spacingBottom,\n            left: childSpacing.spacingLeft,\n            right: childSpacing.spacingRight\n          }))\n        );\n\n        spacingTop = _.isUndefined(spacingTop)\n          ? childrenSpacing.top\n          : spacingTop;\n        spacingBottom = _.isUndefined(spacingBottom)\n          ? childrenSpacing.bottom\n          : spacingBottom;\n        spacingLeft = _.isUndefined(spacingLeft)\n          ? childrenSpacing.left\n          : spacingLeft;\n        spacingRight = _.isUndefined(spacingRight)\n          ? childrenSpacing.right\n          : spacingRight;\n      }\n\n      if (isDone())\n        return { spacingTop, spacingBottom, spacingLeft, spacingRight };\n    }\n\n    _makeScales = ({\n      width,\n      height,\n      xScaleType,\n      yScaleType,\n      invertXScale,\n      invertYScale,\n      xDomain,\n      yDomain,\n      xScale,\n      yScale,\n      marginTop,\n      marginBottom,\n      marginLeft,\n      marginRight,\n      spacingTop,\n      spacingBottom,\n      spacingLeft,\n      spacingRight\n    }) => {\n      const spacing = {\n        top: spacingTop,\n        bottom: spacingBottom,\n        left: spacingLeft,\n        right: spacingRight\n      };\n      const margin = {\n        top: marginTop,\n        bottom: marginBottom,\n        left: marginLeft,\n        right: marginRight\n      };\n      const innerChartWidth = innerWidth(width, margin);\n      const innerChartHeight = innerHeight(height, margin);\n\n      // use existing scales if provided, otherwise create new\n      if (!isValidScale(xScale)) {\n        //innerRange functions produce range (i.e. [5,20]) and map function normalizes to 0 (i.e. [0,15])\n        const xRange = innerRangeX(innerChartWidth, spacing).map(\n          v => v - (spacing.left || 0)\n        );\n        xScale = initScale(xScaleType)\n          .domain(xDomain)\n          .range(xRange);\n\n        // reverse scale domain if `invertXScale` is passed\n        if (invertXScale) {\n          xScale.domain(xScale.domain().reverse());\n        }\n      }\n\n      if (!isValidScale(yScale)) {\n        const yRange = innerRangeY(innerChartHeight, spacing).map(\n          v => v - (spacing.top || 0)\n        );\n        yScale = initScale(yScaleType)\n          .domain(yDomain)\n          .range(yRange);\n\n        // reverse scale domain if `invertYScale` is passed\n        if (invertYScale) {\n          yScale.domain(yScale.domain().reverse());\n        }\n      }\n\n      return { xScale, yScale };\n    };\n\n    render() {\n      const { props } = this;\n      const { width, height, invertXScale, invertYScale } = props;\n\n      // scales not provided, so we have to resolve them\n      // first resolve scale types and domains\n      // const scaleType = this._resolveScaleType(props, ComposedComponent);\n      const { xScaleType, yScaleType } = this._resolveScaleType(\n        props,\n        ComposedComponent\n      );\n\n      // const domain = this._resolveDomain(props, ComposedComponent, scaleType);\n      let { xDomain, yDomain } = this._resolveDomain(\n        props,\n        ComposedComponent,\n        xScaleType,\n        yScaleType\n      );\n      if (invertXScale) xDomain = xDomain.slice().reverse();\n      if (invertYScale) yDomain = yDomain.slice().reverse();\n\n      // create a temporary scale with size & domain, which may be used by the Component to calculate margin/tickDomain\n      // (eg. to create and measure labels for the scales)\n      // let tempScale = this._makeScales(scaleOptions);\n      let scaleOptions = {\n        width,\n        height,\n        xScaleType,\n        yScaleType,\n        xDomain,\n        yDomain,\n        invertXScale,\n        invertYScale,\n        scaleX: props.scaleX,\n        scaleY: props.scaleY,\n        marginTop: props.marginTop,\n        marginBottom: props.marginBottom,\n        marginLeft: props.marginLeft,\n        marginRight: props.marginRight,\n        spacingTop: props.spacingTop,\n        spacingBottom: props.spacingBottom,\n        spacingLeft: props.spacingLeft,\n        spacingRight: props.spacingRight,\n        xScale: props.xScale,\n        yScale: props.yScale\n      };\n      // create a temporary scale with size & domain, which may be used by the Component to calculate margin/tickDomain\n      // (eg. to create and measure labels for the scales)\n      let tempScale = this._makeScales(scaleOptions);\n      let { xScale: tempXScale, yScale: tempYScale } = tempScale;\n\n      // getTickDomain gives children the opportunity to modify the domain to include their scale ticks\n      // (can't happen in getDomain, because it can't be done until the base domain/tempScale has been created)\n      // nice-ing happens in the getTickDomain function inside of _resolveTickDomain\n      const { xTickDomain, yTickDomain } = this._resolveTickDomain(\n        props,\n        ComposedComponent,\n        {\n          xScaleType,\n          yScaleType,\n          xDomain,\n          yDomain,\n          xScale: tempXScale,\n          yScale: tempYScale\n        }\n      );\n      if (isValidDomain(xTickDomain, dataTypeFromScaleType(xScaleType))) {\n        xDomain = combineDomains(\n          [xDomain, xTickDomain],\n          dataTypeFromScaleType(xScaleType)\n        );\n      }\n      if (isValidDomain(yTickDomain, dataTypeFromScaleType(yScaleType))) {\n        yDomain = combineDomains(\n          [yDomain, yTickDomain],\n          dataTypeFromScaleType(yScaleType)\n        );\n      }\n\n      // update tempScale to use new domain before creating margins\n      scaleOptions = { ...scaleOptions, xDomain, yDomain };\n      tempScale = this._makeScales(scaleOptions);\n\n      // then resolve the margins\n      const { marginTop, marginBottom, marginLeft, marginRight } = _.defaults(\n        this._resolveMargin(props, ComposedComponent, {\n          xScaleType,\n          yScaleType,\n          xDomain,\n          yDomain,\n          xScale: tempScale.xScale,\n          yScale: tempScale.yScale\n        }),\n        {\n          marginTop: 0,\n          marginBottom: 0,\n          marginLeft: 0,\n          marginRight: 0\n        }\n      );\n\n      const {\n        spacingTop,\n        spacingBottom,\n        spacingLeft,\n        spacingRight\n      } = _.defaults(\n        this._resolveSpacing(props, ComposedComponent, {\n          xScaleType,\n          yScaleType,\n          xDomain,\n          yDomain,\n          xScale: tempScale.xScale,\n          yScale: tempScale.yScale\n        }),\n        {\n          spacingTop: 0,\n          spacingBottom: 0,\n          spacingLeft: 0,\n          spacingRight: 0\n        }\n      );\n\n      // create real scales from resolved margins\n      scaleOptions = {\n        ...scaleOptions,\n        marginTop,\n        marginBottom,\n        marginLeft,\n        marginRight,\n        spacingTop,\n        spacingBottom,\n        spacingLeft,\n        spacingRight\n      };\n      const { xScale, yScale } = this._makeScales(scaleOptions);\n\n      const passedProps = _.assign({}, this.props, {\n        xScale,\n        yScale,\n        xDomain,\n        yDomain,\n        xScaleType,\n        yScaleType,\n        marginTop,\n        marginBottom,\n        marginLeft,\n        marginRight,\n        spacingTop,\n        spacingBottom,\n        spacingLeft,\n        spacingRight\n      });\n      return <ComposedComponent {...passedProps} />;\n\n      // todo throw if cannot resolve scaleType\n      // todo throw if cannot resolve domain\n      // todo check to make sure margins didn't change after scales resolved?\n    }\n  };\n}\n"],"file":"resolveXYScales.js"}