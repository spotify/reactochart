{"version":3,"sources":["../src/utils/CustomPropTypes.js"],"names":["xyObjectOf","shape","x","type","y","fourDirectionsOf","top","bottom","left","right","getter","oneOfType","string","number","array","func","scaleType","oneOf","datumValueTypes","instanceOf","Date","valueOrAccessor","accessorOrType","isArray"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AAEO,IAAMA,kCAAa,SAAbA,UAAa;AAAA,SAAQ,oBAAUC,KAAV,CAAgB,EAAEC,GAAGC,IAAL,EAAWC,GAAGD,IAAd,EAAhB,CAAR;AAAA,CAAnB;;AAEA,IAAME,8CAAmB,SAAnBA,gBAAmB;AAAA,SAC9B,oBAAUJ,KAAV,CAAgB;AACdK,SAAKH,IADS;AAEdI,YAAQJ,IAFM;AAGdK,UAAML,IAHQ;AAIdM,WAAON;AAJO,GAAhB,CAD8B;AAAA,CAAzB;;AAQA,IAAMO,0BAAS,oBAAUC,SAAV,CAAoB,CACxC,oBAAUC,MAD8B,EAExC,oBAAUC,MAF8B,EAGxC,oBAAUC,KAH8B,EAIxC,oBAAUC,IAJ8B,CAApB,CAAf;;AAOA,IAAMC,gCAAY,oBAAUC,KAAV,CAAgB,CACvC,QADuC,EAEvC,MAFuC,EAGvC,SAHuC,EAIvC,KAJuC,EAKvC,KALuC,CAAhB,CAAlB;;AAQA,IAAMC,4CAAkB,CAC7B,oBAAUL,MADmB,EAE7B,oBAAUD,MAFmB,EAG7B,oBAAUO,UAAV,CAAqBC,IAArB,CAH6B,CAAxB;;AAMA,IAAMC,4CAAkB,oBAAUV,SAAV,WAC1BO,eAD0B,GAE7B,oBAAUH,IAFmB,GAAxB;;AAKA,IAAMO,0CAAiB,SAAjBA,cAAiB,OAAQ;AACpC,MAAI,iBAAEC,OAAF,CAAUpB,IAAV,CAAJ,EAAqB,OAAO,oBAAUQ,SAAV,EAAqB,oBAAUI,IAA/B,4BAAwCZ,IAAxC,GAAP;AACrB,SAAO,oBAAUQ,SAAV,CAAoB,CAAC,oBAAUI,IAAX,EAAiBZ,IAAjB,CAApB,CAAP;AACD,CAHM","file":"CustomPropTypes.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nexport const xyObjectOf = type => PropTypes.shape({ x: type, y: type });\n\nexport const fourDirectionsOf = type =>\n  PropTypes.shape({\n    top: type,\n    bottom: type,\n    left: type,\n    right: type\n  });\n\nexport const getter = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.number,\n  PropTypes.array,\n  PropTypes.func\n]);\n\nexport const scaleType = PropTypes.oneOf([\n  \"linear\",\n  \"time\",\n  \"ordinal\",\n  \"log\",\n  \"pow\"\n]);\n\nexport const datumValueTypes = [\n  PropTypes.number,\n  PropTypes.string,\n  PropTypes.instanceOf(Date)\n];\n\nexport const valueOrAccessor = PropTypes.oneOfType([\n  ...datumValueTypes,\n  PropTypes.func\n]);\n\nexport const accessorOrType = type => {\n  if (_.isArray(type)) return PropTypes.oneOfType([PropTypes.func, ...type]);\n  return PropTypes.oneOfType([PropTypes.func, type]);\n};\n"]}