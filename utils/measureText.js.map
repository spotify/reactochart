{"version":3,"sources":["../src/utils/measureText.js"],"names":["DEFAULT_CANVAS","document","createElement","DEFAULT_FONT_WEIGHT","DEFAULT_FONT_STYLE","measureHeight","size","lineHeight","unit","units","parse","value","unitBlacklist","indexOf","Error","join","convert","measureText","text","fontFamily","fontSize","fontWeight","fontStyle","canvas","ctx","getContext","font","measure","line","width","height","Array","isArray","map","reduce","prev","curr","longest","length"],"mappings":"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","sourcesContent":["/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Formidable\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint-env browser */\nimport units from \"units-css\";\n\nconst DEFAULT_CANVAS = document.createElement(\"canvas\");\nconst DEFAULT_FONT_WEIGHT = 400;\nconst DEFAULT_FONT_STYLE = \"normal\";\n\nconst measureHeight = (size, lineHeight) => {\n  // If the line-height is unitless,\n  // multiply it by the font size.\n  if (!lineHeight.unit) {\n    return units.parse(`${size.value * lineHeight.value}${size.unit}`);\n  }\n\n  // units-css requires the user to provide\n  // DOM nodes for these units. We don't want\n  // to pollute our API with that for the time being.\n  const unitBlacklist = [\"%\", \"ch\", \"cm\", \"em\", \"ex\"];\n  if (unitBlacklist.indexOf(lineHeight.unit) !== -1) {\n    // eslint-disable-line no-magic-numbers\n    throw new Error(\n      `We do not currently support the unit ${lineHeight.unit}\n      from the provided line-height ${lineHeight.value}.\n      Unsupported units include ${unitBlacklist.join(\", \")}.`\n    );\n  }\n\n  // Otherwise, the height is equivalent\n  // to the provided line height.\n  // Non-px units need conversion.\n  if (lineHeight.unit === \"px\") {\n    return lineHeight;\n  }\n  return units.parse(units.convert(lineHeight, \"px\"));\n};\n\nconst measureText = ({\n  text,\n  fontFamily,\n  fontSize,\n  lineHeight,\n  fontWeight = DEFAULT_FONT_WEIGHT,\n  fontStyle = DEFAULT_FONT_STYLE,\n  canvas = DEFAULT_CANVAS\n}) => {\n  const ctx = canvas.getContext(\"2d\");\n  ctx.font = `${fontWeight} ${fontStyle} ${fontSize} ${fontFamily}`;\n\n  const measure = line => {\n    return {\n      text: line,\n      width: units.parse(`${ctx.measureText(line).width}px`),\n      height: measureHeight(units.parse(fontSize), units.parse(lineHeight))\n    };\n  };\n\n  // If multiline, measure the bounds\n  // of all of the lines combined\n  if (Array.isArray(text)) {\n    return text.map(measure).reduce((prev, curr) => {\n      const width =\n        curr.width.value > prev.width.value ? curr.width : prev.width;\n      const height = units.parse(\n        `${prev.height.value + curr.height.value}${curr.height.unit}`\n      );\n      const longest =\n        curr.text.length > prev.text.length ? curr.text : prev.text;\n      return { width, height, text: longest };\n    });\n  }\n\n  return measure(text);\n};\n\nexport default measureText;\n"],"file":"measureText.js"}