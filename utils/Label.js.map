{"version":3,"sources":["../src/utils/Label.js"],"names":["makeLabelFormatters","formatStrs","scaleType","map","formatStr","_","isString","v","format","checkLabelsDistinct","labels","labelStrs","uniq","length","checkRangesOverlap","a","b","every","r","isArray","isFinite","Error","countRangeOverlaps","ranges","tail","reduce","sum","range","i","prevRange","getLabelXRange","scale","label","anchor","anchorOffsets","start","middle","end","x1","value","width","getLabelYRange","top","bottom","y1","height","getLabelXOverhang","labelLeft","labelRight","overhangLeft","Math","ceil","max","min","overhangRight","getLabelYOverhang","labelTop","labelBottom","overhangTop","overhangBottom","getLabelsXOverhang","left","right","thisLeft","thisRight","getLabelsYOverhang","thisTop","thisBottom"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport moment from \"moment\";\nimport numeral from \"numeral\";\n\nexport function makeLabelFormatters(formatStrs, scaleType) {\n  return formatStrs.map(formatStr => {\n    if (!_.isString(formatStr)) return formatStr;\n    return scaleType === \"time\"\n      ? v => moment(v).format(formatStr)\n      : v => numeral(v).format(formatStr);\n  });\n}\n\nexport function checkLabelsDistinct(labels) {\n  // given a set of label objects with text properties,\n  // return true iff each label has distinct text (ie. no duplicate label texts)\n  const labelStrs = _.map(labels, \"text\");\n  return _.uniq(labelStrs).length === labelStrs.length;\n}\n\nexport function checkRangesOverlap(a, b) {\n  // given two number or date ranges of the form [start, end],\n  // returns true if the ranges overlap\n  if (\n    !_.every(\n      [a, b],\n      r =>\n        _.isArray(r) && r.length === 2 && _.every(r, _.isFinite) && r[0] <= r[1]\n    )\n  )\n    throw new Error(\n      \"checkRangesOverlap expects 2 range arrays with 2 numbers each, first <= second\"\n    );\n\n  return a[0] <= b[1] && b[0] <= a[1];\n}\n\nexport function countRangeOverlaps(ranges) {\n  // given a list of ranges of the form [[start, end], ...]\n  // counts the number of adjacent ranges which touch or overlap each other\n  // todo: instead of counting overlaps, sum the amount by which they overlap & choose least overlap\n\n  return _.tail(ranges).reduce((sum, range, i) => {\n    const prevRange = ranges[i]; // (not [i-1], _.tail skips first range)\n    return checkRangesOverlap(prevRange, range) ? sum + 1 : sum;\n  }, 0);\n}\n\nexport function getLabelXRange(scale, label, anchor = \"middle\") {\n  const anchorOffsets = { start: 0, middle: -0.5, end: -1 };\n  const x1 = scale(label.value) + (anchorOffsets[anchor] || 0) * label.width;\n  return [x1, x1 + label.width];\n}\n\nexport function getLabelYRange(scale, label, anchor = \"middle\") {\n  const anchorOffsets = { top: 0, middle: -0.5, bottom: -1 };\n  const y1 = scale(label.value) + (anchorOffsets[anchor] || 0) * label.height;\n  return [y1, y1 + label.height];\n}\n\nexport function getLabelXOverhang(scale, label, anchor = \"middle\") {\n  const [labelLeft, labelRight] = getLabelXRange(scale, label, anchor);\n  const overhangLeft = Math.ceil(Math.max(_.min(scale.range()) - labelLeft, 0));\n  const overhangRight = Math.ceil(\n    Math.max(labelRight - _.max(scale.range()), 0)\n  );\n  return [overhangLeft, overhangRight];\n}\n\nexport function getLabelYOverhang(scale, label, anchor = \"middle\") {\n  const [labelTop, labelBottom] = getLabelYRange(scale, label, anchor);\n  const overhangTop = Math.ceil(Math.max(_.min(scale.range()) - labelTop, 0));\n  const overhangBottom = Math.ceil(\n    Math.max(labelBottom - _.max(scale.range()), 0)\n  );\n  return [overhangTop, overhangBottom];\n}\n\nexport function getLabelsXOverhang(scale, labels, anchor = \"middle\") {\n  return _.reduce(\n    labels,\n    ([left, right], label) => {\n      const [thisLeft, thisRight] = getLabelXOverhang(scale, label, anchor);\n      return [Math.max(left, thisLeft), Math.max(right, thisRight)];\n    },\n    [0, 0]\n  );\n}\n\nexport function getLabelsYOverhang(scale, labels, anchor = \"middle\") {\n  return _.reduce(\n    labels,\n    ([top, bottom], label) => {\n      const [thisTop, thisBottom] = getLabelYOverhang(scale, label, anchor);\n      return [Math.max(top, thisTop), Math.max(bottom, thisBottom)];\n    },\n    [0, 0]\n  );\n}\n"],"file":"Label.js"}