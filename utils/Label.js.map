{"version":3,"sources":["../src/utils/Label.js"],"names":["makeLabelFormatters","checkLabelsDistinct","checkRangesOverlap","countRangeOverlaps","getLabelXRange","getLabelYRange","getLabelXOverhang","getLabelsXOverhang","getLabelsYOverhang","formatStrs","scaleType","map","isString","formatStr","v","format","labels","labelStrs","uniq","length","a","b","every","isArray","r","isFinite","Error","ranges","tail","reduce","sum","range","i","prevRange","scale","label","anchor","anchorOffsets","start","middle","end","x1","value","width","top","bottom","y1","height","labelLeft","labelRight","overhangLeft","Math","ceil","max","min","overhangRight","getLabelYOverhang","labelTop","labelBottom","overhangTop","overhangBottom","left","right","thisLeft","thisRight","thisTop","thisBottom"],"mappings":"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","file":"Label.js","sourcesContent":["import _ from \"lodash\";\nimport moment from \"moment\";\nimport numeral from \"numeral\";\n\nexport function makeLabelFormatters(formatStrs, scaleType) {\n  return formatStrs.map(formatStr => {\n    if (!_.isString(formatStr)) return formatStr;\n    return scaleType === \"time\"\n      ? v => moment(v).format(formatStr)\n      : v => numeral(v).format(formatStr);\n  });\n}\n\nexport function checkLabelsDistinct(labels) {\n  // given a set of label objects with text properties,\n  // return true iff each label has distinct text (ie. no duplicate label texts)\n  const labelStrs = _.map(labels, \"text\");\n  return _.uniq(labelStrs).length === labelStrs.length;\n}\n\nexport function checkRangesOverlap(a, b) {\n  // given two number or date ranges of the form [start, end],\n  // returns true if the ranges overlap\n  if (\n    !_.every(\n      [a, b],\n      r =>\n        _.isArray(r) && r.length === 2 && _.every(r, _.isFinite) && r[0] <= r[1]\n    )\n  )\n    throw new Error(\n      \"checkRangesOverlap expects 2 range arrays with 2 numbers each, first <= second\"\n    );\n\n  return a[0] <= b[1] && b[0] <= a[1];\n}\n\nexport function countRangeOverlaps(ranges) {\n  // given a list of ranges of the form [[start, end], ...]\n  // counts the number of adjacent ranges which touch or overlap each other\n  // todo: instead of counting overlaps, sum the amount by which they overlap & choose least overlap\n\n  return _.tail(ranges).reduce((sum, range, i) => {\n    const prevRange = ranges[i]; // (not [i-1], _.tail skips first range)\n    return checkRangesOverlap(prevRange, range) ? sum + 1 : sum;\n  }, 0);\n}\n\nexport function getLabelXRange(scale, label, anchor = \"middle\") {\n  const anchorOffsets = { start: 0, middle: -0.5, end: -1 };\n  const x1 = scale(label.value) + (anchorOffsets[anchor] || 0) * label.width;\n  return [x1, x1 + label.width];\n}\n\nexport function getLabelYRange(scale, label, anchor = \"middle\") {\n  const anchorOffsets = { top: 0, middle: -0.5, bottom: -1 };\n  const y1 = scale(label.value) + (anchorOffsets[anchor] || 0) * label.height;\n  return [y1, y1 + label.height];\n}\n\nexport function getLabelXOverhang(scale, label, anchor = \"middle\") {\n  const [labelLeft, labelRight] = getLabelXRange(scale, label, anchor);\n  const overhangLeft = Math.ceil(Math.max(_.min(scale.range()) - labelLeft, 0));\n  const overhangRight = Math.ceil(\n    Math.max(labelRight - _.max(scale.range()), 0)\n  );\n  return [overhangLeft, overhangRight];\n}\n\nfunction getLabelYOverhang(scale, label, anchor = \"middle\") {\n  const [labelTop, labelBottom] = getLabelYRange(scale, label, anchor);\n  const overhangTop = Math.ceil(Math.max(_.min(scale.range()) - labelTop, 0));\n  const overhangBottom = Math.ceil(\n    Math.max(labelBottom - _.max(scale.range()), 0)\n  );\n  return [overhangTop, overhangBottom];\n}\n\nexport function getLabelsXOverhang(scale, labels, anchor = \"middle\") {\n  return _.reduce(\n    labels,\n    ([left, right], label) => {\n      const [thisLeft, thisRight] = getLabelXOverhang(scale, label, anchor);\n      return [Math.max(left, thisLeft), Math.max(right, thisRight)];\n    },\n    [0, 0]\n  );\n}\n\nexport function getLabelsYOverhang(scale, labels, anchor = \"middle\") {\n  return _.reduce(\n    labels,\n    ([top, bottom], label) => {\n      const [thisTop, thisBottom] = getLabelYOverhang(scale, label, anchor);\n      return [Math.max(top, thisTop), Math.max(bottom, thisBottom)];\n    },\n    [0, 0]\n  );\n}\n"]}