{"version":3,"sources":["../src/utils/Margin.js"],"names":["innerWidth","innerHeight","innerSize","innerRangeX","innerRangeY","maxMargins","sumMargins","zeroMargin","top","bottom","left","right","getFuzzy","obj","fuzzyKey","find","value","key","match","RegExp","width","margin","Math","max","height","outerWidth","min","outerHeight","prefixKeys","prefix","mapKeys","upperFirst","margins","keyPrefix","reduce","result","mapValues","clone"],"mappings":"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","file":"Margin.js","sourcesContent":["import _ from \"lodash\";\n\nexport const zeroMargin = { top: 0, bottom: 0, left: 0, right: 0 };\n\nfunction getFuzzy(obj = {}, fuzzyKey) {\n  // find a fuzzy match for key in object and return the value\n  // eg getFuzzy({marginLeft: 10}, 'left') returns 10\n  return _.find(obj, (value, key) => {\n    return !!key.match(new RegExp(fuzzyKey, \"i\"));\n  });\n}\n\nexport function innerWidth(width, margin = {}) {\n  return Math.max(\n    width -\n      ((getFuzzy(margin, \"left\") || 0) + (getFuzzy(margin, \"right\") || 0)),\n    0\n  );\n}\nexport function innerHeight(height, margin = {}) {\n  return Math.max(\n    height -\n      ((getFuzzy(margin, \"top\") || 0) + (getFuzzy(margin, \"bottom\") || 0)),\n    0\n  );\n}\n\nexport function innerSize({ width, height } = {}, margin = {}) {\n  return {\n    width: innerWidth(width, margin),\n    height: innerHeight(height, margin)\n  };\n}\n\nexport function innerRangeX(outerWidth, margin = {}) {\n  const left = getFuzzy(margin, \"left\") || 0;\n  return [\n    Math.min(left, outerWidth),\n    Math.min(left + innerWidth(outerWidth, margin), outerWidth)\n  ];\n}\nexport function innerRangeY(outerHeight, margin = {}) {\n  const top = getFuzzy(margin, \"top\") || 0;\n  return [\n    Math.min(top + innerHeight(outerHeight, margin), outerHeight),\n    Math.min(top, outerHeight)\n  ];\n}\n\nfunction prefixKeys(obj, prefix) {\n  if (!prefix) return obj;\n  return _.mapKeys(obj, (value, key) => prefix + _.upperFirst(key));\n}\n\nexport function maxMargins(margins = [], keyPrefix) {\n  return margins.reduce((result, margin) => {\n    return _.mapValues(result, (value, key) => {\n      return Math.max(margin[key] || 0, result[key] || 0);\n    });\n  }, _.clone(prefixKeys(zeroMargin, keyPrefix)));\n}\n\nexport function sumMargins(margins = [], keyPrefix) {\n  return margins.reduce((result, margin) => {\n    return _.mapValues(result, (value, key) => {\n      return (result[key] || 0) + (margin[key] || 0);\n    });\n  }, _.clone(prefixKeys(zeroMargin, keyPrefix)));\n}\n"]}